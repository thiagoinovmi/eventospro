{"version":3,"file":"index-DvybhuCn.js","sources":["../../../eventmie-pro/resources/js/event_earning/components/EventEarning.vue","../../../eventmie-pro/resources/js/event_earning/index.js"],"sourcesContent":["<template>\n    <div>\n        <div class=\"card shadow-sm border-0\">\n            <div class=\"card-header d-flex justify-content-between flex-wrap p-4 bg-white border-bottom-0\">\n                <div class=\"d-flex flex-column\">\n                    <div>\n                        <h1 class=\"fw-bold h2\">{{ trans('em.myearning') }}</h1>\n                    </div>\n\n                    <!-- Filters -->\n                    <div class=\"d-flex\">\n                        <div class=\"me-2\">\n                            <select class=\"form-select\" name=\"event_id\" v-model=\"event_id\" >\n                                <option  value=0>{{ trans('em.all_events') }} </option>\n                                <option v-for=\"(event, index) in events\" :key =\"index\" :value=\"event.id\">{{event.title}} </option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row mx-3\">\n\n                    <div class=\"col-lg-4 col-md-12 col-12\">\n                        <div class=\"card bg-info mb-4 border-0 shadow-sm\">\n                            <div class=\"card-body p-4\">\n                                <div>\n                                    <h5 class=\"mb-0 text-white\">{{ trans('em.total_bookings') }}</h5>\n                                </div>\n                                <div class=\"d-flex align-items-center justify-content-between mt-4\">\n                                    <h2 class=\"fw-bold mb-0 fs-1 text-white\">{{ total_earning.customer_paid_total }} {{ currency }}</h2>\n                                    <i class=\"fas fa-cart-arrow-down text-white fa-2x\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-4 col-md-12 col-12\">\n                        <div class=\"card bg-dark mb-4 border-0 shadow-sm\">\n                            <div class=\"card-body p-4\">\n                                <div>\n                                    <h5 class=\"mb-0 text-white\">{{ trans('em.total_admin_commission') }}</h5>\n                                </div>\n                                <div class=\"d-flex align-items-center justify-content-between mt-4\">\n                                    <h2 class=\"fw-bold mb-0 fs-1 text-white\">{{ total_earning.admin_commission_total }} {{ currency }}</h2>\n                                    <i class=\"fas fa-user-shield text-white fa-2x\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-4 col-md-12 col-12\">\n                        <div class=\"card bg-success mb-4 border-0 shadow-sm\">\n                            <div class=\"card-body p-4\">\n                                <div>\n                                    <h5 class=\"mb-0 text-white\">{{ trans('em.total_profit') }}</h5>\n                                </div>\n                                <div class=\"d-flex align-items-center justify-content-between mt-4\">\n                                    <h2 class=\"fw-bold mb-0 fs-1 text-white\">{{ total_earning.organiser_earning_total }} {{ currency }}</h2>\n                                    <i class=\"fas fa-sack-dollar text-white fa-2x\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n            </div>\n\n            <div class=\"table-responsive\">\n                <table class=\"table text-wrap\">\n                    <thead class=\"table-light text-nowrap\">\n                        <tr>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.event') }}</th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.bookings') }}</th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.commission') }}</th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.profit') }}</th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.month') }}</th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.transferred') }}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"(earning, index) in event_earning\" :key=\"index\" >\n                            <td :data-title=\"trans('em.event')\">\n                                <div class=\"d-flex align-items-center\">\n                                    <a :href=\"eventSlug(earning.event_slug)\"> \n                                        <img :src=\"getImageUrl(earning.event_thumbnail)\" :alt=\"earning.event_name\" class=\"rounded img-4by3-md \" >\n                                    </a>\n                                    <div class=\"ms-3 lh-1\">\n                                        <h5 class=\"mb-1\"> \n                                            <a :href=\"eventSlug(earning.event_slug)\" class=\"text-inherit text-wrap\">{{ earning.event_name }}</a>\n                                        </h5>\n                                        <small class=\"text-success strong\"><i class=\"fas fa-bolt\"></i> {{ earning.count_bookings }} {{ trans('em.bookings') }}</small>\n                                    </div>\n                                </div>\n                            </td>\n                            <td class=\"align-middle\" :data-title=\"trans('em.bookings')\">\n                                {{ earning.customer_paid_total }} {{ currency }}\n                            </td>\n                            <td class=\"align-middle\" :data-title=\"trans('em.commission')\">\n                                {{ earning.admin_commission_total }} {{ currency }}\n                            </td>\n                            <td class=\"align-middle text-success\" :data-title=\"trans('em.profit')\">\n                                <i class=\"fas fa-sack-dollar\"></i> {{ earning.organiser_earning_total }} {{ currency }}\n                            </td>\n                            <td class=\"align-middle\" :data-title=\"trans('em.month')\">\n                                {{ moment(earning.month_year, 'MM YYYY').format('MMM ,YYYY') }}\n                            </td>\n                            <td class=\"align-middle\" :data-title=\"trans('em.transferred')\">\n                                <span class=\"badge bg-success\" v-if=\"earning.transferred > 0\">{{ trans('em.paid') }}</span>\n                                <span class=\"badge bg-primary\" v-else>{{ trans('em.pending') }}</span>\n                            </td>\n                        </tr>\n                        <tr v-if=\"event_earning.length <= 0\">\n                            <td colspan=\"6\" class=\"text-center align-middle\">{{ trans('em.no_bookings') }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <div class=\"px-4 pb-4\"  v-if=\"event_earning.length > 0\">\n                <pagination-component v-if=\"pagination.last_page > 1\" :pagination=\"pagination\" :offset=\"pagination.total\" @paginate=\"eventEarning()\">\n                </pagination-component>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script>\n\nimport PaginationComponent from '../../common_components/Pagination.vue'\nimport mixinsFilters from '../../mixins.js';\n\n\n\nexport default {\n    \n    mixins:[\n        mixinsFilters\n    ],\n\n    props: [\n        // pagination query string\n        'page',\n        \n    ],\n    \n    components: {\n        PaginationComponent,\n    },\n\n    \n    data() {\n        return {\n            event_earning : [],\n            total_earning : [],\n            \n            moment     : moment,\n            edit_index : null,\n             pagination: {\n                'current_page': 1\n            },\n            currency   : null,\n\n            date_range : [],\n            start_date : '',\n            end_date   : '',\n            \n            // date shortucts like today, tommorrow\n            shortcuts: [\n                {\n                    text: trans('em.today'),\n                    onClick: () => {\n                        this.date_range = [moment().toDate(), moment().toDate() ]\n                    }\n                },\n                {\n                    text: trans('em.tomorrow'),\n                    onClick: () => {\n                        this.date_range = [moment().add(1,'day').toDate(), moment().add(1,'day').toDate()]\n                    }\n                },\n                {\n                    text: trans('em.this')+' '+trans('em.weekend'),\n                    onClick: () => {\n                        this.date_range = [moment().endOf(\"week\").toDate(), moment().endOf(\"week\").toDate()]\n                    }\n                },\n                {\n                    text: trans('em.this')+' '+trans('em.week'),\n                    onClick: () => {\n                        this.date_range = [moment().startOf(\"week\").toDate(), moment().endOf(\"week\").toDate()]\n                    }\n                },\n                {\n                    text: trans('em.next')+' '+trans('em.week'),\n                    onClick: () => {\n                        this.date_range = [moment().add(1, 'weeks').startOf(\"week\").toDate(), moment().add(1, 'weeks').endOf(\"week\").toDate()]\n                    }\n                },\n                {\n                    text: trans('em.this')+' '+trans('em.month'),\n                    onClick: () => {\n                        this.date_range = [moment().startOf(\"month\").toDate(), moment().endOf(\"month\").toDate()]\n                    }\n                },\n                {\n                    text: trans('em.next')+' '+trans('em.month'),\n                    onClick: () => {\n                        this.date_range = [moment().add(1, 'months').startOf(\"month\").toDate(), moment().add(1, 'months').endOf(\"month\").toDate()]\n                    }\n                },\n            ],\n\n            events    : [],\n            event_id  : 0,\n        }\n    },\n\n     computed: {\n        current_page() {\n            // get page from route\n            if(typeof this.page === \"undefined\")\n                return 1;\n            return this.page;\n        },\n    },\n\n    methods:{\n\n        // return route with event slug\n        eventSlug(slug){\n            \n            if(slug)\n            {\n                return route('eventmie.events_show',[slug]);\n            }    \n        },\n\n\n        // searching by date \n        dateRange: function () {\n            var is_date_null = 0;\n            if(Object.keys(this.date_range).length > 0 )\n            {\n                // convert date range to server side date\n                this.date_range.forEach(function(value, key) {\n                    if(value != null) {\n                        is_date_null = 1;\n\n                        if(key == 0)\n                            this.start_date   =  this.convert_date(value); // convert local start_date to server date then searching by date\n                        \n                        if(key == 1)\n                            this.end_date     =  this.convert_date(value); // convert local end_date to server date then searching by date\n                    }\n                }.bind(this));\n                \n                // date reset\n                if(is_date_null <= 0){\n                    this.start_date  = '';\n                    this.end_date    = '';\n                }\n\n                this.eventEarning();\n            }\n            \n        },\n\n        // get all events\n        getMyEvents() {\n            axios.get(route('eventmie.all_myevents'))\n            .then(res => {\n                this.events  = res.data.myevents;\n            })\n            .catch(error => {\n                \n            });\n        },\n\n        // get event earning\n        eventEarning() {\n            \n            if(typeof this.start_date === \"undefined\") {\n                this.start_date     = '';\n            }\n            if(typeof this.end_date === \"undefined\") {\n                this.end_date     = '';\n            }\n\n            axios.get(route('eventmie.organiser_event_earning')+'?page='+this.current_page+'&event_id='+this.event_id+'&start_date='\n                         +this.start_date+'&end_date='+this.end_date)\n            .then(res => {\n                \n                this.event_earning   = res.data.event_earning.data;\n                this.pagination = {\n                    'total' : res.data.event_earning.total,\n                    'per_page' : res.data.event_earning.per_page,\n                    'current_page' : res.data.event_earning.current_page,\n                    'last_page' : res.data.event_earning.last_page,\n                    'from' : res.data.event_earning.from,\n                    'to' : res.data.event_earning.to,\n                    'links' : res.data.event_earning.links\n                };\n            })\n            .catch(error => {\n                \n            });\n        },\n\n        //net total\n        totalEarning() {\n             axios.get(route('eventmie.organiser_total_earning'))\n            .then(res => {\n                \n                this.total_earning   = res.data.total_earning;\n                this.currency   = res.data.currency;\n                \n            })\n            .catch(error => {\n                \n            });\n        }\n    },\n   \n    mounted() {\n        \n        this.getMyEvents();\n        this.eventEarning();\n        this.totalEarning();\n    },\n\n    watch : {\n        date_range: function () {\n            this.dateRange();\n        },\n\n        event_id: function () {\n            this.eventEarning();\n        },\n\n    }\n}\n</script>\n\n\n","\n/**\n * This is a page specific seperate vue instance initializer\n */\n\n// include vue common libraries, plugins and components\nimport \"../vue_common.js\"\n\n/**\n * Local Imports\n*/\nimport DatePicker from \"vue2-datepicker\";\nVue.component(\"DatePicker\", DatePicker);\n/**\n * Local Components \n */\nimport EventEarning from './components/EventEarning.vue';\n\n/**\n * Local Vue Routes \n */\nconst routes = new VueRouter({\n    mode: 'history',\n    base: '/',\n    linkExactActiveClass: 'there',\n    routes: [\n        {\n            path: path ? '/'+path+'/dashboard/myearning' : '/dashboard/myearning',\n            \n            // Inject  props based on route.query values for pagination\n            props: (route) => ({\n                page: route.query.page,\n               \n            }),\n            name: 'event_earning_index',\n            component: EventEarning,\n\n        },\n        \n    ],\n});\n\n\n/**\n * This is where we finally create a page specific\n * vue instance with required configs\n * element=app will remain common for all vue instances\n *\n * make sure to use window.app to make new Vue instance\n * so that we can access vue instance from anywhere\n * e.g interceptors \n */\nwindow.app = new Vue({\n    el: '#eventmie_app',\n    router: routes,\n    \n});"],"names":["route"],"mappings":"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"}