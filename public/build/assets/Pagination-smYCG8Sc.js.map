{"version":3,"file":"Pagination-smYCG8Sc.js","sources":["../../../eventmie-pro/resources/js/common_components/Pagination.vue"],"sourcesContent":["<template>\n    <div class=\"mt-6 d-flex flex-wrap justify-content-between\">\n        <ul class=\"pagination\">\n\n                <!-- First & Previous Page -->\n                <li class=\"page-item\">\n                    <router-link :class=\"'page-link pagination-previous'\" :to=\"{ path: path, query: query({ page: 1 })}\" v-if=\"pagination.current_page > 1\"><span aria-hidden=\"true\"><i class=\"fa-solid fa-angles-left\"></i> {{ trans('em.first') }}</span></router-link>\n                </li>\n                <li class=\"page-item\">\n                    <router-link :class=\"'page-link  pagination-previous'\" :to=\"{ path: path, query: query({ page: pagination.current_page - 1 })}\" v-if=\"pagination.current_page > 1\"><span aria-hidden=\"true\"><i class=\"fa-solid fa-angle-left\"></i> {{ trans('em.previous') }}</span></router-link>\n                </li>\n\n        </ul>\n\n        <ul class=\"pagination d-flex flex-wrap\">\n          \n            <li class=\"page-item\" v-for=\"(page, index) in pagination.links\" :key=\"index\" >\n                <router-link v-if=\"!isNaN(page.label)\" class=\"page-link\" :class=\"{ 'active': page.active }\" :to=\"{ path: path, query: query({ page: page.label })}\" >{{ page.label }} </router-link>\n            </li>\n            \n        </ul>\n\n        <ul class=\"pagination\">\n             \n            <!-- Last & Next Page -->\n            <li class=\"page-item\">\n                <router-link :class=\"'page-link pagination-next'\" :to=\"{ path: path, query: query({ page: pagination.current_page + 1 })}\" v-if=\"pagination.current_page < pagination.last_page\"><span aria-hidden=\"true\">{{ trans('em.next') }} <i class=\"fa-solid fa-angle-right\"></i></span></router-link>\n            </li>\n            <li class=\"page-item\">\n                <router-link :class=\"'page-link pagination-next'\" :to=\"{ path: path, query: query({ page: pagination.last_page })}\" v-if=\"pagination.current_page < pagination.last_page\"><span aria-hidden=\"true\">{{ trans('em.last') }} <i class=\"fa-solid fa-angles-right\"></i></span></router-link>\n            </li>\n\n        </ul>\n    </div>\n</template>\n\n<style>\n    .pagination {\n        margin-top: 1rem;\n        margin-bottom: 1rem;\n    }\n</style>\n\n<script>\nexport default {\n    props: ['pagination', 'offset', 'path', 'page'],\n    watch: {\n        '$route' (to, from) {\n            this.changePage(this.current_page);\n        },\n    },\n    computed: {\n        current_page() {\n            // get page from route\n            if(typeof this.page === \"undefined\")\n                return 1;\n            \n            return this.page;\n        },\n    },\n    methods: {\n        isCurrentPage(p_page) {\n            return this.pagination.current_page === p_page;\n        },\n        changePage(p_page) {\n            if (p_page > this.pagination.last_page) {\n                p_page = this.pagination.last_page;\n            }\n            this.pagination.current_page = p_page;\n            this.$emit('paginate');\n        },\n        query(newQuery) {\n            return {\n            ...this.$route.query,\n            ...newQuery\n            }\n        }\n    },\n    computed: {\n        pages() {\n            let pages = [];\n            let from = this.pagination.current_page - Math.floor(this.offset / 2);\n            if (from < 1) {\n                from = 1;\n            }\n            let to = from + this.offset - 1;\n            if (to > this.pagination.last_page) {\n                to = this.pagination.last_page;\n            }\n            while (from <= to) {\n                pages.push(from);\n                from++;\n            }\n            return pages;\n        }\n    }\n}\n</script>"],"names":[],"mappings":";AA4CA,MAAA,YAAA;AAAA,EACA,OAAA,CAAA,cAAA,UAAA,QAAA,MAAA;AAAA,EACA,OAAA;AAAA,IACA,SAAA,IAAA,MAAA;AACA,WAAA,WAAA,KAAA,YAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,UAAA;AAAA,IACA,eAAA;AAEA,UAAA,OAAA,KAAA,SAAA;AACA,eAAA;AAEA,aAAA,KAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,SAAA;AAAA,IACA,cAAA,QAAA;AACA,aAAA,KAAA,WAAA,iBAAA;AAAA,IACA;AAAA,IACA,WAAA,QAAA;AACA,UAAA,SAAA,KAAA,WAAA,WAAA;AACA,iBAAA,KAAA,WAAA;AAAA,MACA;AACA,WAAA,WAAA,eAAA;AACA,WAAA,MAAA,UAAA;AAAA,IACA;AAAA,IACA,MAAA,UAAA;AACA,aAAA;AAAA,QACA,GAAA,KAAA,OAAA;AAAA,QACA,GAAA;AAAA,MACA;AAAA,IACA;AAAA,EACA;AAAA,EACA,UAAA;AAAA,IACA,QAAA;AACA,UAAA,QAAA,CAAA;AACA,UAAA,OAAA,KAAA,WAAA,eAAA,KAAA,MAAA,KAAA,SAAA,CAAA;AACA,UAAA,OAAA,GAAA;AACA,eAAA;AAAA,MACA;AACA,UAAA,KAAA,OAAA,KAAA,SAAA;AACA,UAAA,KAAA,KAAA,WAAA,WAAA;AACA,aAAA,KAAA,WAAA;AAAA,MACA;AACA,aAAA,QAAA,IAAA;AACA,cAAA,KAAA,IAAA;AACA;AAAA,MACA;AACA,aAAA;AAAA,IACA;AAAA,EACA;AACA;;;;;;;;;;;;;;;;;"}