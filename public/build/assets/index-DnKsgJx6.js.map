{"version":3,"file":"index-DnKsgJx6.js","sources":["../../../eventmie-pro/resources/js/bookings_customer/components/CreateGoogleEvent.vue","../../../eventmie-pro/resources/js/bookings_customer/components/MyBooking.vue","../../../eventmie-pro/resources/js/bookings_customer/index.js"],"sourcesContent":["<template>\n    <div v-if=\"booking.is_paid == 1 && booking.status == 1\"> \n        <a :href=\"addToGoogleCalendar\" target=\"_blank\" class=\"btn btn-sm bg-primary text-white\" ><i class=\"fab fa-google\"></i> {{ trans('em.add_event_to_google') }}</a>\n    </div>                      \n</template>\n\n\n<script>\nimport mixinsFilters from '../../mixins.js';\nexport default {\n    mixins:[\n        mixinsFilters\n    ],\n    \n    props:['booking', 'date_format'],\n\n    computed: {\n        addToGoogleCalendar() {\n            let start_date = this.userTimezone(this.booking.event_start_date+' '+this.booking.event_start_time, 'YYYY-MM-DD HH:mm:ss').format(\"YYYYMMDDT\");\n            let start_time = this.userTimezone(this.booking.event_start_date+' '+this.booking.event_start_time, 'YYYY-MM-DD HH:mm:ss').format(\"HHmmSS\");\n            let end_date =  this.userTimezone(this.booking.event_end_date+' '+this.booking.event_end_time, 'YYYY-MM-DD HH:mm:ss').format(\"YYYYMMDDT\");\n            let end_time = this.userTimezone(this.booking.event_end_date+' '+this.booking.event_end_time, 'YYYY-MM-DD HH:mm:ss').format(\"HHmmSS\");\n\n            if(start_date >= end_date)\n                end_date = start_date;\n            \n            let google = 'https://www.google.com/calendar/render?action=TEMPLATE';\n            google += '&text='+this.booking.event_title;\n            google += '&dates='+start_date+start_time+'/'+end_date+end_time;\n\n            if(this.booking.event_excerpt != null)\n                google += '&details='+this.booking.event_excerpt;\n\n            google += '&location='+this.booking.event_venue;\n            google += '&sprop=website:'+window.location.hostname;\n            google += '&sprop=name:'+this.booking.event_slug;\n\n            return google;\n        },\n    },\n    \n}\n</script>","<template>\n    <div class=\"container-fluid\">\n        <div class=\"row py-5\">\n            <div class=\"col-md-12\">\n                <div class=\"card shadow-sm border-0\">\n                    <div class=\"card-header p-4 bg-white border-bottom-0\"></div>\n                    <div class=\"table-responsive\">\n                        <table class=\"table text-wrap table-hover\">\n                            <thead class=\"table-light text-nowrap\">\n                                <tr>\n                                    <th class=\"border-top-0 border-bottom-0\">{{ trans('em.event') }}</th>\n                                    <th class=\"border-top-0 border-bottom-0\">{{ trans('em.ticket') }}</th>\n                                    <th class=\"border-top-0 border-bottom-0\">{{ trans('em.order_total') }} </th>\n                                    <th class=\"border-top-0 border-bottom-0\">{{ trans('em.booked_on') }} </th>\n                                    <th class=\"border-top-0 border-bottom-0\">{{ trans('em.payment') }} </th>\n                                    <th class=\"border-top-0 border-bottom-0\">{{ trans('em.checked_in') }}</th>\n                                    <th class=\"border-top-0 border-bottom-0\">{{ trans('em.status') }}</th>\n                                    <th class=\"border-top-0 border-bottom-0\">{{ trans('em.cancellation') }}</th>  \n                                    <th class=\"border-top-0 border-bottom-0\">{{ trans('em.actions') }}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"(booking, index) in bookings\" :key=\"index\" >\n                                    <td :data-title=\"trans('em.event')\">\n                                        <div class=\"d-flex align-items-center\">\n                                            <a :href=\"eventSlug(booking.event_slug)\"> \n                                                <img :src=\"getImageUrl(booking.event_thumbnail)\" :alt=\"booking.event_title\" class=\"rounded img-4by3-md \">\n                                            </a>\n                                            <div class=\"ms-3 lh-1\">\n                                                <h5 class=\"mb-1\"> \n                                                    <a :href=\"eventSlug(booking.event_slug)\" class=\"text-inherit text-wrap\">{{ booking.event_title }}</a>\n                                                </h5>\n                                                <p class=\"text-mute\">\n                                                    <small class=\"text-muted\" v-if=\"booking.event_start_date != booking.event_end_date\">\n                                                        {{ moment(userTimezone(booking.event_start_date+' '+booking.event_start_time, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')).format(date_format.vue_date_format) }}\n                                                    </small>\n                                                    <small class=\"text-muted\" v-else>\n                                                        {{ moment(userTimezone(booking.event_start_date+' '+booking.event_start_time,'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')).format(date_format.vue_date_format) }}\n                                                    </small>\n                                                    \n                                                    <small class=\"text-muted\">\n                                                        {{ userTimezone(booking.event_start_date+' '+booking.event_start_time, 'YYYY-MM-DD HH:mm:ss').format(date_format.vue_time_format) }}\n                                                    </small>\n                                                    <small class=\"text-muted\"> \n                                                        {{ showTimezone() }}\n                                                    </small>\n                                                </p>\n\n                                                <p>\n                                                    <small class=\"text-success fw-bold\">{{ trans('em.order_id') }}: #{{ booking.order_number }}</small>\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </td>\n                                    \n                                    <td class=\"align-middle\" :data-title=\"trans('em.ticket')\"><i class=\"fas fa-ticket\"></i> {{ booking.ticket_title }} <strong>{{ ' x '+booking.quantity }}</strong></td>\n                                    <td class=\"align-middle\" :data-title=\"trans('em.order_total')\">{{ booking.net_price+' '+ currency }} </td>\n                                    <td class=\"align-middle\" :data-title=\"trans('em.booked_on')\">{{ moment(userTimezone(booking.created_at, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')).format(date_format.vue_date_format) }} {{ showTimezone() }}</td>\n                                    <td class=\"align-middle text-capitalize\" :data-title=\"trans('em.payment')\">\n                                        <span class=\"badge bg-secondary text-white\" v-if=\"booking.payment_type == 'offline'\">\n                                            {{ booking.payment_type }} \n                                            <hr class=\"small p-0 m-0\">\n                                            <small class=\"text-white\" v-if=\"booking.is_paid\">{{ trans('em.paid') }}</small>\n                                            <small class=\"text-white\" v-else>{{ trans('em.unpaid') }}</small>\n                                        </span>\n                                        <span class=\"badge bg-success text-white\" v-else>{{ booking.payment_type }} <hr class=\"small\"><small class=\"text-small\">{{ booking.is_paid ? trans('em.paid') : trans('em.unpaid') }}</small></span>\n                                    </td>\n                                    <td class=\"align-middle\" :data-title=\"trans('em.checked_in')\">\n                                        <p v-if=\"booking.checkins.length > 0\"> \n                                            <span class=\"badge bg-success text-white fw-normal py-1 my-1\" v-for=\"checkin in booking.checkins\" :key=\"checkin.id\">\n                                                <i class=\"fa-solid fa-check-circle\"></i> \n                                                {{ moment(userTimezone(checkin.event_start_date+' '+checkin.check_in_time,'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')).format(date_format.vue_date_format) }} \n                                                {{ userTimezone(checkin.event_start_date+' '+checkin.check_in_time, 'YYYY-MM-DD HH:mm:ss').format(date_format.vue_time_format) }}\n                                            </span>\n                                        </p>\n                                    </td>\n                                    <td class=\"align-middle\" :data-title=\"trans('em.status')\">\n                                        <span class=\"badge bg-success text-white\" v-if=\"booking.status == 1 && booking.expired == 0\">{{ trans('em.active') }}</span>\n                                        <span class=\"badge bg-danger text-white\" v-else>{{ trans('em.inactive') }}</span>\n                                    </td>\n                                    <td class=\"align-middle\" :data-title=\"trans('em.cancellation')\" v-if=\"booking.booking_cancel == 0 && booking.status == 1 && booking.checkins.length <= 0 && booking.expired == 0\">\n                                        <button type=\"button\" class=\"btn btn-sm bg-danger text-white\" @click=\"bookingCancel(booking.id, booking.ticket_id, booking.event_id )\" \n                                        v-if=\"disable_booking_cancellation == null\"\n                                        ><i class=\"fas fa-ban\"></i> {{ trans('em.cancel') }}</button>\n                                        <p v-else>{{ trans('em.n/a') }}</p>\n                                    </td>\n                                    <td class=\"align-middle\" :data-title=\"trans('em.cancellation')\" v-else>\n                                        <span class=\"badge bg-secondary text-white\" v-if=\"booking.booking_cancel == 0\">{{ trans('em.disabled') }}</span>\n                                        <span class=\"badge bg-warning text-white\" v-if=\"booking.booking_cancel == 1\">{{ trans('em.pending') }}</span>\n                                        <span class=\"badge bg-info text-white\" v-if=\"booking.booking_cancel == 2\">{{ trans('em.approved') }}</span>\n                                        <span class=\"badge bg-secondary text-white\" v-if=\"booking.booking_cancel == 3\">{{ trans('em.refunded') }}</span>\n                                    </td>\n                                    \n                                    <!-- check booking expired or not -->\n                                    <td class=\"align-middle\" :data-title=\"trans('em.expired')\" v-if=\"booking.expired == 1\">\n                                        <span class=\"badge bg-danger text-white\"> {{trans('em.expired')}} </span>\n                                    </td>\n\n                                    <td class=\"align-middle text-nowrap\" :data-title=\"trans('em.actions')\" v-else>\n                                        <div v-if=\"hide_ticket_download == null\" class=\"mb-2\">\n                                            <a v-if=\"booking.is_paid == 1 && booking.status == 1\" class=\"btn btn-sm bg-danger text-white\" :href=\"downloadURL(booking.id, booking.order_number)\"><i class=\"fas fa-download\"></i> {{trans('em.ticket')}}</a>\n                                            <span class=\"badge bg-danger text-white\" v-else>\n                                                <small v-if=\"booking.is_paid == 0 && booking.status == 1\" class=\"text-white\">{{ trans('em.unpaid') }}</small>\n                                                <small v-else class=\"\">{{ trans('em.disabled') }}</small>\n                                            </span>\n                                        </div>\n\n                                        <div v-if=\"hide_google_calendar == null\" class=\"mb-2\">\n                                            <create-google-event :booking=\"booking\" :date_format=\"date_format\"></create-google-event>\n                                        </div>\n\n                                        <div v-if=\"booking.online_location != null && booking.is_paid == 1 && booking.status == 1\"> \n                                            <button type=\"button\" class=\"btn btn-sm bg-parimary text-parimary\" @click=\"booking_id = booking.id\"><i class=\"fas fa-tv\"></i> {{ trans('em.online') +' '+ trans('em.event') }}</button>\n                                            <online-event  v-if=\"booking_id == booking.id\" :online_location=\"booking.online_location\" :booking_id=\"booking.id\" ></online-event>\n                                        </div>\n                                    </td>\n                                </tr>\n\n                                <tr v-if=\"bookings.length <= 0\">\n                                    <td colspan=\"10\" class=\"text-center align-middle\">{{ trans('em.no_bookings') }}</td>\n                                </tr>\n                        \n                            </tbody>\n                        </table>\n                    </div>\n                    <div class=\"px-4 pb-4\" v-if=\"bookings.length > 0\">\n                \n                        <pagination-component v-if=\"pagination.last_page > 1\" :pagination=\"pagination\" :offset=\"pagination.total\"  @paginate=\"getMyBookings()\">\n                        </pagination-component>\n            \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script>\n\nimport PaginationComponent from '../../common_components/Pagination.vue'\nimport mixinsFilters from '../../mixins.js';\nimport OnlineEvent from './OnlineEvent.vue';\nimport CreateGoogleEvent from './CreateGoogleEvent.vue';\n\nexport default {\n    \n    mixins:[\n        mixinsFilters\n    ],\n\n    props: [\n        // pagination query string\n        'page',\n        'is_success',\n        'date_format',\n        'disable_booking_cancellation',\n        'hide_ticket_download',\n        'hide_google_calendar',\n        \n    ],\n    \n    components: {\n        PaginationComponent,\n        OnlineEvent,\n        CreateGoogleEvent\n    },\n    \n    data() {\n        return {\n            bookings : [],\n            moment   : moment,\n            pagination: {\n                'current_page': 1\n            },\n            currency : null,\n            booking_id : 0,\n        }\n    },\n\n    computed: {\n        current_page() {\n            // get page from route\n            if(typeof this.page === \"undefined\")\n                return 1;\n            return this.page;\n        },\n    },\n\n    methods:{\n          // get all events\n        getMyBookings() {\n            \n            axios.get(route('eventmie.mybookings')+'?page='+this.current_page)\n            .then(res => {\n                this.currency   = res.data.currency;\n                this.bookings   = res.data.bookings.data;\n                this.pagination = {\n                    'total' : res.data.bookings.total,\n                    'per_page' : res.data.bookings.per_page,\n                    'current_page' : res.data.bookings.current_page,\n                    'last_page' : res.data.bookings.last_page,\n                    'from' : res.data.bookings.from,\n                    'to' : res.data.bookings.to,\n                    'links' : res.data.bookings.links\n                };\n            })\n            .catch(error => {\n                \n            });\n        },\n\n        // cancel my booking\n        bookingCancel(booking_id, ticket_id, event_id) {\n            this.showConfirm(trans('em.ask_cancel_booking')).then((res) => {\n                if(res) {\n                    axios.post(route('eventmie.mybookings_cancel'),{\n                        booking_id : booking_id,\n                        ticket_id  : ticket_id,\n                        event_id   : event_id,\n                    })\n                    .then(res => {\n                        if(res.data.status)\n                        {\n                            this.showNotification('success', trans('em.booking_cancel_success'));\n                            this.getMyBookings();\n                        }    \n                    })\n                    .catch(error => {});\n                }\n            })\n        },\n\n        // return route with event slug\n        eventSlug(slug) {\n            if(slug) {\n                return route('eventmie.events_show',[slug]);\n            }\n        },\n\n        // return route with download URL\n        downloadURL(id, order_number) {\n            if(id && order_number) {\n                return route('eventmie.downloads_index',[id, order_number]);\n            }\n        },\n    },\n    mounted() {\n        this.getMyBookings();\n        \n        // send email after successful bookings\n        this.sendEmail();\n    }\n}\n</script>\n\n\n","\n/**\n * This is a page specific seperate vue instance initializer\n */\n\n// include vue common libraries, plugins and components\nimport \"../vue_common.js\"\n\n/**\n * Local Imports\n*/\n\n/**\n * Local Components \n */\nimport MyBooking from './components/MyBooking.vue';\n\n\n/**\n * Local Vue Routes \n */\nconst routes = new VueRouter({\n    mode: 'history',\n    base: '/',\n    linkExactActiveClass: 'there',\n    routes: [\n        {\n            path: path ? '/'+path+'/mybookings' : '/mybookings',\n            // Inject  props based on route.query values for pagination\n            props: (route) => ({\n                page: route.query.page,\n                date_format: date_format,\n                disable_booking_cancellation: disable_booking_cancellation,\n                hide_ticket_download: hide_ticket_download,\n                hide_google_calendar: hide_google_calendar,\n            }),\n            name: 'mybookings',\n            component: MyBooking,\n\n        },\n    ],\n});\n\n\n/**\n * This is where we finally create a page specific\n * vue instance with required configs\n * element=app will remain common for all vue instances\n *\n * make sure to use window.app to make new Vue instance\n * so that we can access vue instance from anywhere\n * e.g interceptors \n */\nwindow.app = new Vue({\n    el: '#eventmie_app',\n    router: routes,\n});"],"names":["_sfc_main","res","route"],"mappings":";;;AASA,MAAAA,cAAA;AAAA,EACA,QAAA;AAAA,IACA;AAAA,EACA;AAAA,EAEA,OAAA,CAAA,WAAA,aAAA;AAAA,EAEA,UAAA;AAAA,IACA,sBAAA;AACA,UAAA,aAAA,KAAA,aAAA,KAAA,QAAA,mBAAA,MAAA,KAAA,QAAA,kBAAA,qBAAA,EAAA,OAAA,WAAA;AACA,UAAA,aAAA,KAAA,aAAA,KAAA,QAAA,mBAAA,MAAA,KAAA,QAAA,kBAAA,qBAAA,EAAA,OAAA,QAAA;AACA,UAAA,WAAA,KAAA,aAAA,KAAA,QAAA,iBAAA,MAAA,KAAA,QAAA,gBAAA,qBAAA,EAAA,OAAA,WAAA;AACA,UAAA,WAAA,KAAA,aAAA,KAAA,QAAA,iBAAA,MAAA,KAAA,QAAA,gBAAA,qBAAA,EAAA,OAAA,QAAA;AAEA,UAAA,cAAA;AACA,mBAAA;AAEA,UAAA,SAAA;AACA,gBAAA,WAAA,KAAA,QAAA;AACA,gBAAA,YAAA,aAAA,aAAA,MAAA,WAAA;AAEA,UAAA,KAAA,QAAA,iBAAA;AACA,kBAAA,cAAA,KAAA,QAAA;AAEA,gBAAA,eAAA,KAAA,QAAA;AACA,gBAAA,oBAAA,OAAA,SAAA;AACA,gBAAA,iBAAA,KAAA,QAAA;AAEA,aAAA;AAAA,IACA;AAAA,EACA;AAEA;;;;;;;;;;;;;;;ACwGA,MAAA,YAAA;AAAA,EAEA,QAAA;AAAA,IACA;AAAA,EACA;AAAA,EAEA,OAAA;AAAA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAEA;AAAA,EAEA,YAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACA;AAAA,EAEA,OAAA;AACA,WAAA;AAAA,MACA,UAAA,CAAA;AAAA,MACA;AAAA,MACA,YAAA;AAAA,QACA,gBAAA;AAAA,MACA;AAAA,MACA,UAAA;AAAA,MACA,YAAA;AAAA,IACA;AAAA,EACA;AAAA,EAEA,UAAA;AAAA,IACA,eAAA;AAEA,UAAA,OAAA,KAAA,SAAA;AACA,eAAA;AACA,aAAA,KAAA;AAAA,IACA;AAAA,EACA;AAAA,EAEA,SAAA;AAAA;AAAA,IAEA,gBAAA;AAEA,YAAA,IAAA,MAAA,qBAAA,IAAA,WAAA,KAAA,YAAA,EACA,KAAA,SAAA;AACA,aAAA,WAAA,IAAA,KAAA;AACA,aAAA,WAAA,IAAA,KAAA,SAAA;AACA,aAAA,aAAA;AAAA,UACA,SAAA,IAAA,KAAA,SAAA;AAAA,UACA,YAAA,IAAA,KAAA,SAAA;AAAA,UACA,gBAAA,IAAA,KAAA,SAAA;AAAA,UACA,aAAA,IAAA,KAAA,SAAA;AAAA,UACA,QAAA,IAAA,KAAA,SAAA;AAAA,UACA,MAAA,IAAA,KAAA,SAAA;AAAA,UACA,SAAA,IAAA,KAAA,SAAA;AAAA,QACA;AAAA,MACA,CAAA,EACA,MAAA,WAAA;AAAA,MAEA,CAAA;AAAA,IACA;AAAA;AAAA,IAGA,cAAA,YAAA,WAAA,UAAA;AACA,WAAA,YAAA,MAAA,uBAAA,CAAA,EAAA,KAAA,CAAA,QAAA;AACA,YAAA,KAAA;AACA,gBAAA,KAAA,MAAA,4BAAA,GAAA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACA,CAAA,EACA,KAAA,CAAAC,SAAA;AACA,gBAAAA,KAAA,KAAA,QACA;AACA,mBAAA,iBAAA,WAAA,MAAA,2BAAA,CAAA;AACA,mBAAA,cAAA;AAAA,YACA;AAAA,UACA,CAAA,EACA,MAAA,WAAA;AAAA,WAAA;AAAA,QACA;AAAA,MACA,CAAA;AAAA,IACA;AAAA;AAAA,IAGA,UAAA,MAAA;AACA,UAAA,MAAA;AACA,eAAA,MAAA,wBAAA,CAAA,IAAA,CAAA;AAAA,MACA;AAAA,IACA;AAAA;AAAA,IAGA,YAAA,IAAA,cAAA;AACA,UAAA,MAAA,cAAA;AACA,eAAA,MAAA,4BAAA,CAAA,IAAA,YAAA,CAAA;AAAA,MACA;AAAA,IACA;AAAA,EACA;AAAA,EACA,UAAA;AACA,SAAA,cAAA;AAGA,SAAA,UAAA;AAAA,EACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACxOA,MAAM,SAAS,IAAI,UAAU;AAAA,EACzB,MAAM;AAAA,EACN,MAAM;AAAA,EACN,sBAAsB;AAAA,EACtB,QAAQ;AAAA,IACJ;AAAA,MACI,MAAM,OAAO,MAAI,OAAK,gBAAgB;AAAA;AAAA,MAEtC,OAAO,CAACC,YAAW;AAAA,QACf,MAAMA,OAAM,MAAM;AAAA,QAClB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAChB;AAAA,MACY,MAAM;AAAA,MACN,WAAW;AAAA,IAEd;AAAA,EACJ;AACL,CAAC;AAYD,OAAO,MAAM,IAAI,IAAI;AAAA,EACjB,IAAI;AAAA,EACJ,QAAQ;AACZ,CAAC;"}