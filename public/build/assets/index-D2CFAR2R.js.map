{"version":3,"file":"index-D2CFAR2R.js","sources":["../../../eventmie-pro/resources/js/venues_manage/components/Venues.vue","../../../eventmie-pro/resources/js/venues_manage/index.js"],"sourcesContent":["<!-- parent component-->\n<template>\n    <div>\n        <div class=\"card shadow-sm border-0\">\n            <div class=\"card-header d-flex justify-content-between flex-wrap p-4 bg-white border-bottom-0\">\n                <div>\n                    <h1 class=\"mb-0 fw-bold h2\">{{ trans('em.myvenues') }}</h1>\n                </div>\n                <div>\n                    <Venue-component \n                        :organiser_id=\"organiser_id\"\n                    >\n                    </Venue-component>\n                </div>\n            </div>\n            <div class=\"mx-4\">\n                <div class=\"alert alert-info\"><i class=\"fas fa-circle-info\"></i> {{ trans('em.venue_info') }}</div>\n            </div>\n            <div class=\"table-responsive\">\n                <table class=\"table text-wrap\">\n                    <thead class=\"table-light text-nowrap\">\n                        <tr>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.title') }}</th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.state') }}</th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.city') }}</th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.actions') }}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"(item, index) in venues\" v-bind:item=\"item\" v-bind:index=\"index\" v-bind:key=\"item.id\" >\n                            <td :data-title=\"trans('em.venue')\">\n                                <div class=\"d-flex align-items-center\">\n                                    <a :href=\"venueSlug(item.slug)\">    \n                                        <img :src=\"(item.images && isValidJSON(item.images) ? getImageUrl(JSON.parse(item.images)[0]) : 'default.jpg')\" \n                                            :alt=\"item.title\" class=\"rounded img-4by3-md\" >\n                                      \n                                    </a>\n                                    <div class=\"ms-3 lh-1\">\n                                        <h5 class=\"mb-1\"> \n                                            <a class=\"text-inherit text-wrap\" :href=\"venueSlug(item.slug)\">{{ item.title }}</a>\n                                        </h5>\n                                        <small class=\"text-muted strong\">{{ item.venue_type }}</small>\n                                    </div>\n                                </div>\n                            </td>\n                            <td class=\"align-middle\" :data-title=\"trans('em.state')\">{{ item.state }}</td>\n                            <td class=\"align-middle\" :data-title=\"trans('em.city')\">{{ item.city }}</td>\n                            <td class=\"align-middle text-nowrap\" :data-title=\"trans('em.actions')\"> \n                                <div class=\"btn-group\">\n                                    <button type=\"button\" class=\"btn btn-primary btn-sm\" @click=\"edit_index = index\"><i class=\"fas fa-edit\"></i> {{ trans('em.edit') }}</button>\n                                    <button type=\"button\" class=\"btn btn-danger btn-sm\" @click=\"deleteVenue(item.id)\"><i class=\"fas fa-trash\"></i> {{ trans('em.delete') }}</button>\n                                </div>\n                                <Venue-component  v-if=\"edit_index == index\" :edit_venue=\"item\" :organiser_id=\"organiser_id\" ></Venue-component>\n                            </td>\n                        </tr>\n                        <tr v-if=\"venues.length <= 0\">\n                            <td class=\"text-center align-middle\">{{ trans('em.no_venues') }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <div class=\"px-4 pb-4\" v-if=\"venues.length > 0\">\n                <pagination-component v-if=\"pagination.last_page > 1\" :pagination=\"pagination\" :offset=\"pagination.total\"  @paginate=\"getVenues()\"></pagination-component>\n            </div>\n        </div>\n\n    </div>\n</template>\n\n<script>\n\nimport VenueComponent from './Venue.vue';\nimport PaginationComponent from '../../common_components/Pagination.vue';\nimport mixinsFilters from '../../mixins.js';\nimport MapAutocomplete from './MapAutocomplete.vue';\n\nexport default {\n    props: [\n        'organiser_id', 'page',\n    ],\n\n    components: {\n        VenueComponent,\n        PaginationComponent,\n        MapAutocomplete\n    },\n\n    mixins:[\n        mixinsFilters\n    ],\n\n    data() {\n        return {\n            venues       : [],\n            edit_index : null,\n            pagination : {\n                'current_page': 1\n            },\n        }\n    },\n    computed: {\n         \n        current_page() {\n            // get page from route\n            if(typeof this.page === \"undefined\")\n                return 1;\n            return this.page;\n        },\n    },\n    methods: {\n        getVenues() {\n            axios.get(route('eventmie.myvenues.index')+'?page='+this.current_page+'&organiser_id='+this.organiser_id)\n            .then(res => {\n                console.log('hello world', res.data.venues.data);\n                // fill data venues array\n                this.venues   = res.data.venues.data;\n                this.pagination = {\n                    'total' : res.data.venues.total,\n                    'per_page' : res.data.venues.per_page,\n                    'current_page' : res.data.venues.current_page,\n                    'last_page' : res.data.venues.last_page,\n                    'from' : res.data.venues.from,\n                    'to' : res.data.venues.to\n                };\n            })\n            .catch(error => {\n                Vue.helpers.axiosErrors(error);\n            });\n        },\n        deleteVenue(venue_id){\n\n            this.showConfirm(trans('em.delete_venue_ask')).then((res) => {\n                if(res) {\n         \n                    axios.post(route('eventmie.myvenues.destroy',[venue_id]), {\n                        \n                        // headers: {\n                        //     _method : 'DELETE'\n                        // },\n\n                        organiser_id : this.organiser_id,\n                        _method      : 'DELETE'\n                    })\n                    .then(res => {\n                    \n                        if(res.data.status)\n                        {\n                            this.getVenues();\n                            this.showNotification('success', trans('em.delete_venue_succcess'));\n                        }\n                    })\n                    .catch(error => {\n                        Vue.helpers.axiosErrors(error);\n                    });\n                }\n            })\n        },\n        // return route with venue slug\n        venueSlug(slug){\n            return route('eventmie.venues.show',[slug]);\n        },\n\n        isValidJSON(str) {\n            try {\n                JSON.parse(str);\n                return true;\n            } catch (e) {\n                return false;\n            }\n        }\n    },\n\n\n    mounted() {\n        this.getVenues();\n    }\n}\n</script>\n\n","\n/**\n * This is a page specific seperate vue instance initializer\n */\n\n// include vue common libraries, plugins and components\nimport \"../vue_common.js\"\n\n/**\n * Local Third-party Lib Imports\n*/\n\n\n/**\n * Local Components \n */\nimport Venues from './components/Venues.vue';\n\n/**\n * Local Vue Routes \n */\nconst routes = new VueRouter({\n    mode: 'history',\n    base: '/',\n    linkExactActiveClass: 'there',\n    routes: [\n        {\n            path: path ? '/'+path+'/dashboard/myvenues' : '/dashboard/myvenues',\n            // Inject  props based on route.query values for pagination\n            props: (route) => ({\n                page: route.query.page,\n                \n            }),\n            name: 'Venues',\n            component: Venues,\n\n        },\n    ],\n});\n\n/**\n * This is where we finally create a page specific\n * vue instance with required configs\n * element=app will remain common for all vue instances\n * \n */\nwindow.app = new Vue({\n    el: '#eventmie_app',\n    router: routes,\n});"],"names":["res","route"],"mappings":";;;;AA6EA,MAAA,YAAA;AAAA,EACA,OAAA;AAAA,IACA;AAAA,IAAA;AAAA,EACA;AAAA,EAEA,YAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACA;AAAA,EAEA,QAAA;AAAA,IACA;AAAA,EACA;AAAA,EAEA,OAAA;AACA,WAAA;AAAA,MACA,QAAA,CAAA;AAAA,MACA,YAAA;AAAA,MACA,YAAA;AAAA,QACA,gBAAA;AAAA,MACA;AAAA,IACA;AAAA,EACA;AAAA,EACA,UAAA;AAAA,IAEA,eAAA;AAEA,UAAA,OAAA,KAAA,SAAA;AACA,eAAA;AACA,aAAA,KAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,SAAA;AAAA,IACA,YAAA;AACA,YAAA,IAAA,MAAA,yBAAA,IAAA,WAAA,KAAA,eAAA,mBAAA,KAAA,YAAA,EACA,KAAA,SAAA;AACA,gBAAA,IAAA,eAAA,IAAA,KAAA,OAAA,IAAA;AAEA,aAAA,SAAA,IAAA,KAAA,OAAA;AACA,aAAA,aAAA;AAAA,UACA,SAAA,IAAA,KAAA,OAAA;AAAA,UACA,YAAA,IAAA,KAAA,OAAA;AAAA,UACA,gBAAA,IAAA,KAAA,OAAA;AAAA,UACA,aAAA,IAAA,KAAA,OAAA;AAAA,UACA,QAAA,IAAA,KAAA,OAAA;AAAA,UACA,MAAA,IAAA,KAAA,OAAA;AAAA,QACA;AAAA,MACA,CAAA,EACA,MAAA,WAAA;AACA,YAAA,QAAA,YAAA,KAAA;AAAA,MACA,CAAA;AAAA,IACA;AAAA,IACA,YAAA,UAAA;AAEA,WAAA,YAAA,MAAA,qBAAA,CAAA,EAAA,KAAA,CAAA,QAAA;AACA,YAAA,KAAA;AAEA,gBAAA,KAAA,MAAA,6BAAA,CAAA,QAAA,CAAA,GAAA;AAAA;AAAA;AAAA;AAAA,YAMA,cAAA,KAAA;AAAA,YACA,SAAA;AAAA,UACA,CAAA,EACA,KAAA,CAAAA,SAAA;AAEA,gBAAAA,KAAA,KAAA,QACA;AACA,mBAAA,UAAA;AACA,mBAAA,iBAAA,WAAA,MAAA,0BAAA,CAAA;AAAA,YACA;AAAA,UACA,CAAA,EACA,MAAA,WAAA;AACA,gBAAA,QAAA,YAAA,KAAA;AAAA,UACA,CAAA;AAAA,QACA;AAAA,MACA,CAAA;AAAA,IACA;AAAA;AAAA,IAEA,UAAA,MAAA;AACA,aAAA,MAAA,wBAAA,CAAA,IAAA,CAAA;AAAA,IACA;AAAA,IAEA,YAAA,KAAA;AACA,UAAA;AACA,aAAA,MAAA,GAAA;AACA,eAAA;AAAA,MACA,SAAA,GAAA;AACA,eAAA;AAAA,MACA;AAAA,IACA;AAAA,EACA;AAAA,EAGA,UAAA;AACA,SAAA,UAAA;AAAA,EACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC5JA,MAAM,SAAS,IAAI,UAAU;AAAA,EACzB,MAAM;AAAA,EACN,MAAM;AAAA,EACN,sBAAsB;AAAA,EACtB,QAAQ;AAAA,IACJ;AAAA,MACI,MAAM,OAAO,MAAI,OAAK,wBAAwB;AAAA;AAAA,MAE9C,OAAO,CAACC,YAAW;AAAA,QACf,MAAMA,OAAM,MAAM;AAAA,MAElC;AAAA,MACY,MAAM;AAAA,MACN,WAAW;AAAA,IAEd;AAAA,EACJ;AACL,CAAC;AAQD,OAAO,MAAM,IAAI,IAAI;AAAA,EACjB,IAAI;AAAA,EACJ,QAAQ;AACZ,CAAC;"}