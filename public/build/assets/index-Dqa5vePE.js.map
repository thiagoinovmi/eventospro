{"version":3,"file":"index-Dqa5vePE.js","sources":["../../../eventmie-pro/resources/js/bookings_organiser/components/EditBooking.vue","../../../eventmie-pro/resources/js/bookings_organiser/components/OrganiserBooking.vue","../../../eventmie-pro/resources/js/bookings_organiser/index.js"],"sourcesContent":["<template>\n    <div class=\"custom_model\">\n        <div class=\"modal show\" v-if=\"openModal\">\n            <div class=\"modal-dialog modal-lg w-100\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h1 class=\"modal-title fs-3\">{{ trans('em.update_booking_status') }}</h1>\n                        <button type=\"button\" class=\"btn btn-sm bg-danger text-white close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" @click=\"close()\"><span aria-hidden=\"true\">&times;</span></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form ref=\"form\" @submit.prevent=\"validateForm\" method=\"POST\" enctype=\"multipart/form-data\">\n                            <input type=\"hidden\" class=\"form-control\"  name=\"customer_id\" v-model=\"booking.customer_id\">\n                            <input type=\"hidden\" class=\"form-control\"  name=\"event_id\" v-model=\"booking.event_id\">\n                            <input type=\"hidden\" class=\"form-control\"  name=\"booking_id\" v-model=\"booking.id\">\n                            <input type=\"hidden\" class=\"form-control\"  name=\"ticket_id\" v-model=\"booking.ticket_id\">\n\n                            <div class=\"modal-body\">\n                                <div class=\"mb-3\">\n                                    <label class=\"form-label\">{{ trans('em.booking_cancellation') }}</label>\n                                    <select  class=\"form-control\"  name=\"booking_cancel\"  v-model=\"booking_cancel\" v-validate=\"'required'\">\n                                        <option  value=\"0\">{{ trans('em.no_cancellation') }} </option>\n                                        <option  value=\"1\">{{ trans('em.cancellation_pending') }} </option>\n                                        <option  value=\"2\">{{ trans('em.cancellation_approved') }} </option>\n                                        <option  value=\"3\">{{ trans('em.amount_refunded') }} </option>\n                                    </select>\n                                    <span v-show=\"errors.has('booking_cancel')\" class=\"help text-danger\">{{ errors.first('booking_cancel') }}</span>\n                                </div>\n                                    \n                                <div class=\"row\">\n                                    <div class=\"col-md-12\">\n                                        <label class=\"form-label\">{{ trans('em.booking_status') }}</label>\n                                    </div>\n                                    <div class=\"col-md-12 mb-3\">\n                                        <label class=\"radio-inline\">\n                                            <input type=\"radio\" value=\"1\" name=\"status\" v-model=\"status\"> {{ trans('em.enable') }}\n                                        </label>\n                                        <label class=\"radio-inline\">\n                                            <input type=\"radio\" value=\"0\" name=\"status\" v-model=\"status\"> {{ trans('em.disable') }}\n                                        </label>\n                                    </div>\n                                    <span v-show=\"errors.has('status')\" class=\"help text-danger\">{{ errors.first('status') }}</span>\n                                </div>\n                                    \n                                <div class=\"row\">\n                                    <div class=\"col-md-12\">\n                                        <label class=\"form-label\">{{ trans('em.booking_paid') }} </label>\n                                    </div>\n                                    <div class=\"col-md-12 mb-3\">\n                                        <label class=\"radio-inline\">\n                                            <input type=\"radio\" value=\"1\" name=\"is_paid\" v-model=\"is_paid\"> {{ trans('em.yes') }}\n                                        </label>\n                                        <label class=\"radio-inline\">\n                                            <input type=\"radio\" value=\"0\" name=\"is_paid\" v-model=\"is_paid\"> {{ trans('em.no') }}\n                                        </label>\n                                    </div>\n                                    <span v-show=\"errors.has('is_paid')\" class=\"help text-danger\">{{ errors.first('is_paid') }}</span>\n                                </div>\n                            </div>\n\n                            <div class=\"modal-footer\">\n                                <button type=\"submit\" class=\"btn btn-primary\"><i class=\"fas fa-sd-card\"></i> {{ trans('em.save') }}</button>\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\n\nimport mixinsFilters from '../../mixins.js';\n\nexport default {\n    props: [\"booking\"],\n\n     mixins:[\n        mixinsFilters\n    ],\n\n    data() {\n        return {\n            \n            openModal: false,\n            \n            booking_cancel       : null,\n            status               : null,\n            is_paid              : 0,\n           \n        }\n    },\n    methods: {\n        // reset form and close modal\n        close: function () {    \n            this.booking_cancel = null;\n            this.status         = null;\n       \n            this.$refs.form.reset();\n\n            this.openModal          = false;\n            this.$parent.edit_index = null;\n        },\n\n        editBooking() {\n            this.booking_cancel     = this.booking.booking_cancel;\n            this.status             = this.booking.status;\n            this.is_paid            = this.booking.is_paid;\n           \n        },\n        \n        \n        // validate data on form submit\n        validateForm(event) {\n            this.$validator.validateAll().then((result) => {\n                if (result) {\n                    this.formSubmit(event);            \n                }\n            });\n        },\n\n        // show server validation errors\n        serverValidate(serrors) {\n            this.$validator.validateAll().then((result) => {\n                this.$validator.errors.add(serrors);\n            });\n        },\n\n        // submit form\n        formSubmit(event) {\n\n            // prepare form data for post request\n            let post_url = route('eventmie.obookings_organiser_bookings_edit');\n\n            if(this.$parent.role.id == 4)\n                post_url = route('eventmie.pos.edit_bookings');\n\n            let post_data = new FormData(this.$refs.form);\n            \n            // axios post request\n            axios.post(post_url, post_data)\n            .then(res => {\n                // on success\n                // use vuex to update global sponsors array\n                // close form\n                this.close();\n                this.updateItem();\n                if(res.data.status)\n                    Vue.helpers.showToast('success', trans('em.booking_updat_success'));\n            \n            })\n            .catch(error => {\n                let serrors = Vue.helpers.axiosErrors(error);\n                if (serrors.length) {\n                    this.serverValidate(serrors);\n                }\n            });\n        },\n\n        updateItem() {\n            this.$emit('changeItem');\n        }\n    },\n    mounted() {\n        if(this.booking) {\n            this.editBooking();\n            this.openModal = true;\n        }\n    },\n}\n</script>","<template>\n    <div>    \n        <div class=\"card shadow-sm border-0\">\n            <div class=\"card-header d-flex justify-content-between flex-wrap p-4 bg-white border-bottom-0\">\n                <div class=\"d-flex flex-column\">\n                    <div>\n                        <h1 class=\"fw-bold h2\">{{ trans('em.mybookings') }}</h1>\n                    </div>\n\n                    <!-- Filters -->\n                    <div class=\"d-flex\">\n                        <div class=\"me-2\">\n                            <select class=\"form-select\" name=\"event_id\" v-model=\"event_id\" >\n                                <option  value=0>{{ trans('em.all_events') }} </option>\n                                <option v-for=\"(event, index) in events\" :key =\"index\" :value=\"event.id\">{{event.title}} </option>\n                            </select>\n                        </div>\n                        <div class=\"me-2\">\n                            <date-picker class=\"form-control\" :shortcuts=\"shortcuts\" v-model=\"date_range\" range :lang=\"$vue2_datepicker_lang\" :placeholder=\"trans('em.booking_date')\" format=\"YYYY-MM-DD \"></date-picker>\n                        </div>        \n                    </div>\n                </div>\n\n\n            </div>\n\n            <div class=\"table-responsive\">\n                <table class=\"table text-wrap\">\n                    <thead class=\"table-light text-nowrap\">\n                        <tr>\n                            <th class=\"border-top-0 border-bottom-0 d-md-none\">{{ trans('em.actions') }}</th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.event') }}</th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.customer_email') }} </th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.ticket') }}</th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.order_total') }} </th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.booked_on') }} </th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.payment') }}</th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.checked_in') }}</th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.status') }}</th>\n                            <th class=\"border-top-0 border-bottom-0\">{{ trans('em.cancellation') }}</th>\n                            <th class=\"border-top-0 border-bottom-0 d-none d-md-table-cell\">{{ trans('em.actions') }}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"(booking, index) in bookings\" :key=\"index\" >\n                            <!-- Actions column for mobile (first) -->\n                            <td class=\"align-middle text-nowrap d-md-none\" :data-title=\"trans('em.actions')\" v-if=\"booking.expired == 1\">\n                                <span class=\"badge bg-danger text-white\"> {{trans('em.expired')}} </span>\n                            </td>\n                            <td class=\"align-middle text-nowrap d-md-none\" :data-title=\"trans('em.actions')\" v-else>\n                                <div class=\"mb-2 btn-group\" v-if=\"role.id != 5\">\n                                    <a class=\"btn btn-secondary btn-sm\" :href=\"goto_route(booking.id)\">\n                                        <i class=\"fas fa-info\"></i>&nbsp;<span>{{ trans('em.view') }}</span>\n                                    </a>\n                                    <button type=\"button\" class=\"btn btn-info btn-sm\" @click=\"edit_index = index\">\n                                        <i class=\"fas fa-edit\"> </i><span >{{ trans('em.edit') }}</span>\n                                    </button>\n                                    <edit-booking \n                                        :booking    = \"booking\"\n                                        v-if=\"edit_index == index\" \n                                        @changeItem = \"getOrganiserBookings\"\n\n                                    ></edit-booking>\n                                </div>\n\n                                <div v-if=\"hide_ticket_download == null\" class=\"mb-2\">\n                                    <a v-if=\"booking.is_paid == 1 && booking.status == 1\" class=\"btn btn-sm bg-danger text-white\" :href=\"downloadURL(booking.id, booking.order_number)\"><i class=\"fas fa-download\"></i> {{trans('em.ticket')}}</a>\n                                    <span class=\"badge bg-danger text-white\" v-else>\n                                        <small v-if=\"booking.is_paid == 0 && booking.status == 1\" class=\"text-white\">{{ trans('em.unpaid') }}</small>\n                                        <small v-else class=\"\">{{ trans('em.disabled') }}</small>\n                                    </span>\n                                </div>\n\n                                <div v-if=\"hide_google_calendar == null\" class=\"mb-2\">\n                                    <create-google-event :booking=\"booking\" :date_format=\"date_format\"></create-google-event>\n                                </div>\n\n                                <div v-if=\"booking.online_location != null && booking.is_paid == 1 && booking.status == 1\"> \n                                    <button type=\"button\" class=\"btn btn-sm bg-parimary text-parimary\" @click=\"booking_id = booking.id\"><i class=\"fas fa-tv\"></i> {{ trans('em.online') +' '+ trans('em.event') }}</button>\n                                    <online-event  v-if=\"booking_id == booking.id\" :online_location=\"booking.online_location\" :booking_id=\"booking.id\" ></online-event>\n                                </div>\n                            </td>\n                            <td :data-title=\"trans('em.event')\">\n                                <div class=\"d-flex align-items-center\">\n                                    <a :href=\"eventSlug(booking.event_slug)\"> \n                                        <img :src=\"getImageUrl(booking.event_thumbnail)\" :alt=\"booking.event_title\" class=\"rounded img-4by3-md \">\n                                    </a>\n                                    <div class=\"ms-3 lh-1\">\n                                        <h5 class=\"mb-1\"> \n                                            <a :href=\"eventSlug(booking.event_slug)\" class=\"text-inherit text-wrap\">{{ booking.event_title }}</a>\n                                        </h5>\n                                        <p class=\"text-mute\">\n                                            <small class=\"text-muted\" v-if=\"booking.event_start_date != booking.event_end_date\">\n                                                {{ moment(userTimezone(booking.event_start_date+' '+booking.event_start_time, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')).format(date_format.vue_date_format) }}\n                                            </small>\n                                            <small class=\"text-muted\" v-else>\n                                                {{ moment(userTimezone(booking.event_start_date+' '+booking.event_start_time,'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')).format(date_format.vue_date_format) }}\n                                            </small>\n                                            \n                                            <small class=\"text-muted\">\n                                                {{ userTimezone(booking.event_start_date+' '+booking.event_start_time, 'YYYY-MM-DD HH:mm:ss').format(date_format.vue_time_format) }}\n                                            </small>\n                                            <small class=\"text-muted\"> \n                                                {{ showTimezone() }}\n                                            </small>\n                                        </p>\n\n                                        <p>\n                                            <small class=\"text-success fw-bold\">{{ trans('em.order_id') }}: #{{ booking.order_number }}</small>\n                                        </p>\n                                    </div>\n                                </div>\n                            </td>\n                            \n                            <td class=\"align-middle\" :data-title=\"trans('em.customer_email')\">{{ booking.customer_email}}</td>\n                            <td class=\"align-middle\" :data-title=\"trans('em.ticket')\"><i class=\"fas fa-ticket\"></i> {{ booking.ticket_title }} <strong>{{ ' x '+booking.quantity }}</strong></td>\n                            <td class=\"align-middle\" :data-title=\"trans('em.order_total')\">{{ booking.net_price+' '+ currency }} </td>\n                            <td class=\"align-middle\" :data-title=\"trans('em.booked_on')\">{{ moment(userTimezone(booking.created_at, 'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')).format(date_format.vue_date_format) }} {{ showTimezone() }}</td>\n                            <td class=\"align-middle text-capitalize\" :data-title=\"trans('em.payment')\">\n                                <span class=\"badge bg-secondary text-white\" v-if=\"booking.payment_type == 'offline'\">\n                                    {{ booking.payment_type }} \n                                    <hr class=\"small p-0 m-0\">\n                                    <small class=\"text-white\" v-if=\"booking.is_paid\">{{ trans('em.paid') }}</small>\n                                    <small class=\"text-white\" v-else>{{ trans('em.unpaid') }}</small>\n                                </span>\n                                <span class=\"badge bg-success text-white\" v-else>{{ booking.payment_type }} <hr class=\"small\"><small class=\"text-small\">{{ booking.is_paid ? trans('em.paid') : trans('em.unpaid') }}</small></span>\n                            </td>\n                            <td class=\"align-middle\" :data-title=\"trans('em.checked_in')\">\n                                <p v-if=\"booking.checkins.length > 0\"> \n                                    <span class=\"badge bg-success text-white fw-normal py-1 my-1\" v-for=\"checkin in booking.checkins\" :key=\"checkin.id\">\n                                        <i class=\"fa-solid fa-check-circle\"></i> \n                                        {{ moment(userTimezone(checkin.event_start_date+' '+checkin.check_in_time,'YYYY-MM-DD HH:mm:ss').format('YYYY-MM-DD')).format(date_format.vue_date_format) }} \n                                        {{ userTimezone(checkin.event_start_date+' '+checkin.check_in_time, 'YYYY-MM-DD HH:mm:ss').format(date_format.vue_time_format) }}\n                                    </span>\n                                </p>\n                            </td>\n                            <td class=\"align-middle\" :data-title=\"trans('em.status')\">\n                                <span class=\"badge bg-success text-white\" v-if=\"booking.status == 1 && booking.expired == 0\">{{ trans('em.active') }}</span>\n                                <span class=\"badge bg-danger text-white\" v-else>{{ trans('em.inactive') }}</span>\n                            </td>\n                            <td class=\"align-middle\" :data-title=\"trans('em.cancellation')\">\n                                <span class=\"badge bg-success text-white\" v-if=\"booking.booking_cancel == 0 && booking.status == 1\">{{ trans('em.no') }}</span>\n                                <span class=\"badge bg-secondary text-white\" v-if=\"booking.booking_cancel == 0 && booking.status == 0\">{{ trans('em.disabled') }}</span>\n                                <span class=\"badge bg-warning text-white\" v-if=\"booking.booking_cancel == 1\">{{ trans('em.pending') }}</span>\n                                <span class=\"badge bg-info text-white\" v-if=\"booking.booking_cancel == 2\">{{ trans('em.approved') }}</span>\n                                <span class=\"badge bg-secondary text-white\" v-if=\"booking.booking_cancel == 3\">{{ trans('em.refunded') }}</span>\n                            </td>\n\n                            <!-- Actions column for desktop (last) -->\n                            <td class=\"align-middle text-nowrap d-none d-md-table-cell\" :data-title=\"trans('em.actions')\" v-if=\"booking.expired == 1\">\n                                <span class=\"badge bg-danger text-white\"> {{trans('em.expired')}} </span>\n                            </td>\n                            <td class=\"align-middle text-nowrap d-none d-md-table-cell\" :data-title=\"trans('em.actions')\" v-else>\n                                <div class=\"mb-2 btn-group\" v-if=\"role.id != 5\">\n                                    <a class=\"btn btn-secondary btn-sm\" :href=\"goto_route(booking.id)\">\n                                        <i class=\"fas fa-info\"></i>&nbsp;<span>{{ trans('em.view') }}</span>\n                                    </a>\n                                    <button type=\"button\" class=\"btn btn-info btn-sm\" @click=\"edit_index = index\">\n                                        <i class=\"fas fa-edit\"> </i><span >{{ trans('em.edit') }}</span>\n                                    </button>\n                                    <edit-booking \n                                        :booking    = \"booking\"\n                                        v-if=\"edit_index == index\" \n                                        @changeItem = \"getOrganiserBookings\"\n\n                                    ></edit-booking>\n                                </div>\n\n                                <div v-if=\"hide_ticket_download == null\" class=\"mb-2\">\n                                    <a v-if=\"booking.is_paid == 1 && booking.status == 1\" class=\"btn btn-sm bg-danger text-white\" :href=\"downloadURL(booking.id, booking.order_number)\"><i class=\"fas fa-download\"></i> {{trans('em.ticket')}}</a>\n                                    <span class=\"badge bg-danger text-white\" v-else>\n                                        <small v-if=\"booking.is_paid == 0 && booking.status == 1\" class=\"text-white\">{{ trans('em.unpaid') }}</small>\n                                        <small v-else class=\"\">{{ trans('em.disabled') }}</small>\n                                    </span>\n                                </div>\n\n                                <div v-if=\"hide_google_calendar == null\" class=\"mb-2\">\n                                    <create-google-event :booking=\"booking\" :date_format=\"date_format\"></create-google-event>\n                                </div>\n\n                                <div v-if=\"booking.online_location != null && booking.is_paid == 1 && booking.status == 1\"> \n                                    <button type=\"button\" class=\"btn btn-sm bg-parimary text-parimary\" @click=\"booking_id = booking.id\"><i class=\"fas fa-tv\"></i> {{ trans('em.online') +' '+ trans('em.event') }}</button>\n                                    <online-event  v-if=\"booking_id == booking.id\" :online_location=\"booking.online_location\" :booking_id=\"booking.id\" ></online-event>\n                                </div>\n                            </td>\n                            \n                        </tr>\n\n                        <tr v-if=\"bookings.length <= 0\">\n                            <td colspan=\"10\" class=\"text-center align-middle\">{{ trans('em.no_bookings') }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <div class=\"px-4 pb-4\" v-if=\"bookings.length > 0\">\n                <pagination-component v-if=\"pagination.last_page > 1\" :pagination=\"pagination\" :offset=\"pagination.total\"  @paginate=\"getOrganiserBookings()\">\n                </pagination-component>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\nimport PaginationComponent from '../../common_components/Pagination.vue';\nimport mixinsFilters from '../../mixins.js';\nimport EditBooking from './EditBooking.vue';\nimport DatePicker from 'vue2-datepicker';\nimport OnlineEvent from '../../bookings_customer/components/OnlineEvent.vue';\n\n//CUSTOM\n\nimport _ from 'lodash';\n\n\n//CUSTOM\n\nexport default {\n\n    mixins:[\n        mixinsFilters\n    ],\n\n    props: [\n        // pagination query string\n        'page',\n        'is_success',\n        'date_format',\n        'hide_ticket_download',\n        'role',\n        'user'\n\n    ],\n\n    components: {\n        PaginationComponent,\n        EditBooking,\n        DatePicker,\n        OnlineEvent,\n        //CUSTOM\n        \n        \n        \n        //CUSTOM\n    },\n\n    \n    data() {\n        return {\n            bookings   : [],\n            moment     : moment,\n            edit_index : null,\n             pagination: {\n                'current_page': 1\n            },\n            currency   : null,\n\n            date_range : [],\n            start_date : '',\n            end_date   : '',\n\n            booking_id : 0,\n            \n            // date shortucts like today, tommorrow\n            shortcuts: [\n                {\n                    text: trans('em.today'),\n                    onClick: () => {\n                        this.date_range = [moment().toDate(), moment().toDate() ]\n                    }\n                },\n                {\n                    text: trans('em.tomorrow'),\n                    onClick: () => {\n                        this.date_range = [moment().add(1,'day').toDate(), moment().add(1,'day').toDate()]\n                    }\n                },\n                {\n                    text: trans('em.this')+' '+trans('em.weekend'),\n                    onClick: () => {\n                        this.date_range = [moment().endOf(\"week\").toDate(), moment().endOf(\"week\").toDate()]\n                    }\n                },\n                {\n                    text: trans('em.this')+' '+trans('em.week'),\n                    onClick: () => {\n                        this.date_range = [moment().startOf(\"week\").toDate(), moment().endOf(\"week\").toDate()]\n                    }\n                },\n                {\n                    text: trans('em.next')+' '+trans('em.week'),\n                    onClick: () => {\n                        this.date_range = [moment().add(1, 'weeks').startOf(\"week\").toDate(), moment().add(1, 'weeks').endOf(\"week\").toDate()]\n                    }\n                },\n                {\n                    text: trans('em.this')+' '+trans('em.month'),\n                    onClick: () => {\n                        this.date_range = [moment().startOf(\"month\").toDate(), moment().endOf(\"month\").toDate()]\n                    }\n                },\n                {\n                    text: trans('em.next')+' '+trans('em.month'),\n                    onClick: () => {\n                        this.date_range = [moment().add(1, 'months').startOf(\"month\").toDate(), moment().add(1, 'months').endOf(\"month\").toDate()]\n                    }\n                },\n            ],\n\n            events    : [],\n            event_id  : 0,\n        }\n    },\n\n     computed: {\n        current_page() {\n            // get page from route\n            if(typeof this.page === \"undefined\")\n                return 1;\n            return this.page;\n        },\n    },\n\n    methods:{\n          // get all events\n        getOrganiserBookings() {\n\n            if(typeof this.start_date === \"undefined\") {\n                this.start_date     = '';\n            }\n            if(typeof this.end_date === \"undefined\") {\n                this.end_date     = '';\n            }\n\n            //CUSTOM\n\n            if(typeof this.event_start_date === \"undefined\") {\n                this.event_start_date     = '';\n            }\n            if(typeof this.event_end_date === \"undefined\") {\n                this.event_end_date     = '';\n            }\n            // axios.get(route('eventmie.obookings_organiser_bookings')+'?page='+this.current_page+'&event_id='+this.event_id+'&start_date='\n            //              +this.start_date+'&end_date='+this.end_date)\n\n            let booking_route = route('eventmie.obookings_organiser_bookings');\n\n            if(this.role.id == 4)\n                booking_route = route('eventmie.pos.bookings');\n\n            if(this.role.id == 5)\n                booking_route = route('eventmie.scanner.bookings');\n\n            axios.get(booking_route+'?page='+this.current_page+'&event_id='+this.event_id+'&start_date='\n                         +this.start_date+'&end_date='+this.end_date+'&length='+this.length+'&search='+this.search+'&event_start_date='+this.event_start_date+'&event_end_date='+this.event_end_date)\n            //CUSTOM\n            .then(res => {\n                this.currency   = res.data.currency;\n                this.bookings   = res.data.bookings.data;\n                this.pagination = {\n                    'total' : res.data.bookings.total,\n                    'per_page' : res.data.bookings.per_page,\n                    'current_page' : res.data.bookings.current_page,\n                    'last_page' : res.data.bookings.last_page,\n                    'from' : res.data.bookings.from,\n                    'to' : res.data.bookings.to,\n                    'links' : res.data.bookings.links,\n                };\n            })\n            .catch(error => {\n                \n            });\n        },\n\n        // view booking by organiser \n        organiserViewBooking(booking_id) {\n            axios.get(route('eventmie.obookings_organiser_bookings_show',[booking_id]))\n            .then(res => {\n                if(res.data.status)\n                {\n                    this.getOrganiserBookings();\n                }    \n            })\n            .catch(error => {\n                \n            });\n        },\n\n        // view booking\n        goto_route(id) {\n            if(this.role.id == 3)\n                return route('eventmie.obookings_organiser_bookings_show', {id:id});\n            if(this.role.id == 4)\n                return route('eventmie.pos.show', {id:id});\n            if(this.role.id == 5)\n                return route('eventmie.scanner.show', {id:id});\n        },\n\n        // return route with event slug\n        eventSlug(slug){\n            \n            if(slug)\n            {\n                return route('eventmie.events_show',[slug]);\n            }    \n        },\n\n        // return route with download URL\n        downloadURL(id, order_number) {\n            if(id && order_number) {\n                return route('eventmie.downloads_index',[id, order_number]);\n            }\n        },\n\n        // searching by date \n        dateRange: function () {\n            var is_date_null = 0;\n            if(Object.keys(this.date_range).length > 0 )\n            {\n                // convert date range to server side date\n                this.date_range.forEach(function(value, key) {\n                    if(value != null) {\n                        is_date_null = 1;\n\n                        if(key == 0)\n                            this.start_date   =  this.convert_date(value); // convert local start_date to server date then searching by date\n                        \n                        if(key == 1)\n                            this.end_date     =  this.convert_date(value); // convert local end_date to server date then searching by date\n                    }\n                }.bind(this));\n                \n                // date reset\n                if(is_date_null <= 0){\n                    this.start_date  = '';\n                    this.end_date    = '';\n                }\n\n                this.getOrganiserBookings()\n            }\n            \n        },\n\n        // get all events\n        getMyEvents() {\n\n            let events_route = route('eventmie.all_myevents');\n\n            if(this.role.id == 4)\n                events_route = route('eventmie.pos.events');\n\n            if(this.role.id == 5)\n                events_route = route('eventmie.scanner.events');\n\n\n            axios.get(events_route)\n            .then(res => {\n                this.events  = res.data.myevents;\n            })\n            .catch(error => {\n\n            });\n        },\n\n        \n    },\n   \n    mounted() {\n        this.getOrganiserBookings();\n        this.getMyEvents();\n        \n        // send email after successful bookings\n        this.sendEmail();\n    },\n\n    watch : {\n        date_range: function () {\n            this.dateRange();\n        },\n\n        event_id: function () {\n            this.getOrganiserBookings();\n        },\n\n    }\n}\n</script>\n\n\n\n\n","\n/**\n * This is a page specific seperate vue instance initializer\n */\n\n// include vue common libraries, plugins and components\nimport \"../vue_common.js\"\n\n/**\n * Local Imports\n*/\n\n\n/**\n * Local Components \n */\nimport OrganiserBooking from './components/OrganiserBooking.vue';\n\n/**\n * Local Vue Routes \n */\nconst routes = new VueRouter({\n    mode: 'history',\n    base: '/',\n    linkExactActiveClass: 'there',\n    routes: [\n        {\n            path: path ,\n            // Inject  props based on route.query values for pagination\n            props: (route) => ({\n                page: route.query.page,\n                date_format: date_format,\n                hide_ticket_download: hide_ticket_download,\n                hide_google_calendar: hide_google_calendar,\n               \n            }),\n            name: 'organiserbooking',\n            component: OrganiserBooking,\n\n        },\n    ],\n});\n\n\n/**\n * This is where we finally create a page specific\n * vue instance with required configs\n * element=app will remain common for all vue instances\n *\n * make sure to use window.app to make new Vue instance\n * so that we can access vue instance from anywhere\n * e.g interceptors \n */\nwindow.app = new Vue({\n    el: '#eventmie_app',\n    router: routes,\n    \n});"],"names":["_sfc_main","route"],"mappings":"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"}