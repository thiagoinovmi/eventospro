{"version":3,"file":"index-B8fSvWjZ.js","sources":["../../../eventmie-pro/resources/js/profile/components/PersonalDetails.vue","../../../eventmie-pro/resources/js/profile/components/Security.vue","../../../eventmie-pro/resources/js/profile/components/BankDetails.vue","../../../eventmie-pro/resources/js/profile/components/OrganiserInfo.vue","../../../eventmie-pro/resources/js/profile/components/BecomeOrganiser.vue","../../../eventmie-pro/resources/js/profile/index.js"],"sourcesContent":["<template>\n    <div>\n        <div class=\"tab-pane\">\n            <div class=\"panel-group\">\n                <div class=\"panel panel-default lgx-panel\">\n                    <div class=\"panel-heading px-5\">\n                        <form id=\"form\" class=\"form-horizontal\" ref=\"form\" :action=\"submitUrl()\"\n                            @submit.prevent=\"validateForm\" method=\"POST\" enctype=\"multipart/form-data\">\n                            <input type=\"hidden\" name=\"_token\" id=\"csrf-token\" :value=\"csrf_token\" />\n                            \n                            <div class=\"col-md-12 mb-5 text-center\">\n                                <img id=\"preview-image-before-upload\" :src=\"avatarUrl\"\n                                    alt=\"profile-pic\" style=\"max-height: 128px;border-radius: 50%;\">\n                            </div>\n\n                            <div class=\"form-group row mt-3 mt-5\">\n                                <label class=\"form-label col-md-3 form-label\">{{ this.is_organiser == true ? trans('em.organisation_logo') : trans('em.avatar') }}</label>\n                                <div class=\"col-md-9\">\n                                    <input @change=\"imagePreview\" class=\"form-control\" id=\"avatar\" name=\"avatar\" type=\"file\"  >\n                                    \n                                    <span v-show=\"errors.has('avatar')\" class=\"help text-danger\">{{ errors.first(\"avatar\")}}</span>\n                                </div>\n                            </div>\n           \n\n                            <div class=\"form-group row mt-3 mt-3\">\n                                <label class=\"col-md-3 form-label\">{{\n                                trans(\"em.name\")\n                                }}</label>\n                                <div class=\"col-md-9\">\n                                    <input class=\"form-control\" name=\"name\" type=\"text\" v-model=\"name\"\n                                        v-validate=\"'required'\" />\n                                    <span v-show=\"errors.has('name')\" class=\"help text-danger\">{{ errors.first(\"name\")\n                                    }}</span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group row mt-3\">\n                                <label class=\"col-md-3 form-label\">{{ trans(\"em.email\") }}*</label>\n                                <div class=\"col-md-9\">\n                                    <input class=\"form-control\" name=\"email\" type=\"email\" v-model=\"email\"\n                                        v-validate=\"'required'\" />\n                                    <span v-show=\"errors.has('email')\" class=\"help text-danger\">{{ errors.first(\"email\")\n                                    }}</span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group row mt-3\">\n                                <label class=\"col-md-3 form-label\">{{\n                                trans(\"em.address\")\n                                }}</label>\n                                <div class=\"col-md-9\">\n                                    <input class=\"form-control\" name=\"address\" type=\"text\" v-model=\"address\" />\n                                    <span v-show=\"errors.has('address')\" class=\"help text-danger\">{{\n                                    errors.first(\"address\") }}</span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group row mt-3\">\n                                <label class=\"col-md-3 form-label\">{{\n                                trans(\"em.phone\")\n                                }}</label>\n                                <div class=\"col-md-9\">\n                                    <input class=\"form-control\" name=\"phone\" type=\"text\" v-model=\"phone\" />\n                                    <span v-show=\"errors.has('phone')\" class=\"help text-danger\">{{ errors.first(\"phone\")\n                                    }}</span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group row mt-3\">\n                                <div class=\"col-md-9 offset-md-3\">\n                                    <button class=\"btn btn-primary\" type=\"submit\">\n                                        <i class=\"fas fa-sd-card\"></i>\n                                        {{ trans(\"em.save\") }}\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport mixinsFilters from \"../../mixins.js\";\nexport default {\n    props: [\"user\", \"csrf_token\"],\n    mixins: [mixinsFilters],\n    data() {\n        return {\n            name: null,\n            username: null,\n            email: null,\n            address: null,\n            phone: null,\n            avatar : null,\n            is_organiser : is_organiser,\n            avatarUrl : null,\n\n        };\n    },\n\n    methods: {\n        // ...mapMutations([\"add\"]),\n\n        editProfile() {\n            this.name = this.user.name,\n            this.username = this.user.username,\n            this.email = this.user.email,\n            this.address = this.user.address,\n            this.phone = this.user.phone;\n        },\n\n        // validate data on form submit\n        validateForm(event) {\n            this.$validator.validateAll().then(result => {\n                if (result) {\n                    this.formSubmit(event);\n                }\n            });\n        },\n\n        // show server validation errors\n        serverValidate(serrors) {\n            this.$validator.validateAll().then(result => {\n                this.$validator.errors.add(serrors);\n            });\n        },\n\n        // submit form\n        async formSubmit(event) {\n           \n            this.$refs.form.submit();\n        },\n\n        submitUrl() {\n            return route(\"eventmie.updateAuthUser\");\n        },\n\n        imagePreview(e) {\n\n            const file = e.target.files[0];\n            let url = URL.createObjectURL(file);\n\n            $('#preview-image-before-upload').attr('src', url); \n           \n        },\n\n        storageDisk(){\n            this.avatarUrl = this.getImageUrl(this.user.avatar);\n            \n        }\n\n    },\n    mounted() {\n        this.editProfile();\n        this.storageDisk();\n    }\n};\n</script>\n","<template>\n    <div>\n        <div id=\"security\" class=\"tab-pane\">\n            <div class=\"panel-group\">\n                <div class=\"panel panel-default lgx-panel\">\n                    <div class=\"panel-heading px-5\">\n                        <form\n                            id=\"updatePasswordUser\"\n                            class=\"form-horizontal\"\n                            ref=\"form\"\n                            :action=\"submitUrl()\"\n                            @submit.prevent=\"validateForm\"\n                            method=\"POST\"\n                        >\n                            <input\n                                type=\"hidden\"\n                                name=\"_token\"\n                                id=\"csrf-token\"\n                                :value=\"csrf_token\"\n                            />\n\n                            <div class=\"form-group row mt-3\">\n                                <label class=\"col-md-3 form-label\">{{\n                                    trans(\"em.current_password\")\n                                }}</label>\n                                <div class=\"col-md-9\">\n                                    <input\n                                        class=\"form-control\"\n                                        name=\"current\"\n                                        type=\"password\"\n                                        v-validate=\"'required'\"\n                                        v-model=\"current\"\n                                    />\n                                    <span\n                                        v-show=\"errors.has('current')\"\n                                        class=\"help text-danger\"\n                                        >{{ errors.first(\"current\") }}</span\n                                    >\n                                </div>\n                            </div>\n\n                            <div class=\"form-group row mt-3\">\n                                <label class=\"col-md-3 form-label\"\n                                    >{{ trans(\"em.new\") }}\n                                    {{ trans(\"em.password\") }}</label\n                                >\n                                <div class=\"col-md-9\">\n                                    <input\n                                        class=\"form-control\"\n                                        name=\"password\"\n                                        type=\"password\"\n                                        v-model=\"password\"\n                                    />\n                                    <span\n                                        v-show=\"errors.has('password')\"\n                                        class=\"help text-danger\"\n                                        >{{ errors.first(\"password\") }}</span\n                                    >\n                                </div>\n                            </div>\n\n                            <div class=\"form-group row mt-3\">\n                                <label class=\"col-md-3 form-label\">{{\n                                    trans(\"em.confirm_password\")\n                                }}</label>\n                                <div class=\"col-md-9\">\n                                    <input\n                                        class=\"form-control\"\n                                        name=\"password_confirmation\"\n                                        type=\"password\"\n                                        v-model=\"password_confirmation\"\n                                    />\n                                    <span\n                                        v-show=\"\n                                            errors.has('password_confirmation')\n                                        \"\n                                        class=\"help text-danger\"\n                                        >{{\n                                            errors.first(\n                                                \"password_confirmation\"\n                                            )\n                                        }}</span\n                                    >\n                                </div>\n                            </div>\n\n                            <div class=\"form-group row mt-3\">\n                                <div class=\"col-md-9 offset-md-3\">\n                                    <button class=\"btn btn-primary\" type=\"submit\">\n                                        <i class=\"fas fa-sd-card\"></i>\n                                        {{ trans(\"em.save\") }}\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport mixinsFilters from \"../../mixins.js\";\nexport default {\n    props: [\"user\", \"csrf_token\"],\n    mixins: [mixinsFilters],\n    data() {\n        return {\n            current: null,\n            password: null,\n            password_confirmation: null\n        };\n    },\n\n    methods: {\n        // validate data on form submit\n        validateForm(event) {\n            this.$validator.validateAll().then(result => {\n                if (result) {\n                    this.formSubmit(event);\n                }\n            });\n        },\n\n        // show server validation errors\n        serverValidate(serrors) {\n            this.$validator.validateAll().then(result => {\n                this.$validator.errors.add(serrors);\n            });\n        },\n\n        formSubmit() {\n            this.$refs.form.submit();\n        },\n\n        submitUrl() {\n            return route(\"eventmie.updatePasswordUser\");\n        }\n    },\n    mounted() {}\n};\n</script>\n","<template>\n    <div>\n        <div id=\"Bdetail\" class=\"tab-pane\">\n            <div class=\"panel-group\">\n                <div class=\"panel panel-default lgx-panel\">\n                    <div class=\"panel-heading px-5\">\n                        <form id=\"form\" class=\"form-horizontal\" ref=\"form\" :action=\"submitUrl()\"\n                            @submit.prevent=\"validateForm\" method=\"POST\">\n                            <input type=\"hidden\" name=\"_token\" id=\"csrf-token\" :value=\"csrf_token\" />\n                            <div class=\"form-group row mt-3\">\n                                <label class=\"col-md-3 form-label\">{{\n                                trans(\"em.bank_name\")\n                                }}</label>\n                                <div class=\"col-md-9\">\n                                    <input class=\"form-control\" name=\"bank_name\" type=\"text\" v-model=\"bank_name\" />\n                                    <span v-show=\"errors.has('bank_name')\" class=\"help text-danger\">{{\n                                    errors.first(\"bank_name\") }}</span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group row mt-3\">\n                                <label class=\"col-md-3 form-label\">{{\n                                trans(\"em.bank_code\")\n                                }}</label>\n                                <div class=\"col-md-9\">\n                                    <input class=\"form-control\" name=\"bank_code\" type=\"text\" v-model=\"bank_code\" />\n                                    <span v-show=\"errors.has('bank_code')\" class=\"help text-danger\">{{\n                                    errors.first(\"bank_code\") }}</span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group row mt-3\">\n                                <label class=\"col-md-3 form-label\">{{\n                                trans(\"em.bank_branch_name\")\n                                }}</label>\n                                <div class=\"col-md-9\">\n                                    <input class=\"form-control\" name=\"bank_branch_name\" type=\"text\"\n                                        v-model=\"bank_branch_name\" />\n                                    <span v-show=\"errors.has('bank_branch_name')\" class=\"help text-danger\">{{\n                                    errors.first(\"bank_branch_name\")\n                                    }}</span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group row mt-3\">\n                                <label class=\"col-md-3 form-label\">{{\n                                trans(\"em.bank_branch_code\")\n                                }}</label>\n                                <div class=\"col-md-9\">\n                                    <input class=\"form-control\" name=\"bank_branch_code\" type=\"text\"\n                                        v-model=\"bank_branch_code\" />\n                                    <span v-show=\"errors.has('bank_branch_code')\" class=\"help text-danger\">{{\n                                    errors.first(\"bank_branch_code\")\n                                    }}</span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group row mt-3\">\n                                <label class=\"col-md-3 form-label\">{{\n                                trans(\"em.bank_account_number\")\n                                }}</label>\n                                <div class=\"col-md-9\">\n                                    <input class=\"form-control\" name=\"bank_account_number\" type=\"text\"\n                                        v-model=\"bank_account_number\" />\n                                    <span v-show=\"\n                                        errors.has('bank_account_number')\n                                    \" class=\"help text-danger\">{{\n                                    errors.first(\"bank_account_number\")\n                                    }}</span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group row mt-3\">\n                                <label class=\"col-md-3 form-label\">{{\n                                trans(\"em.bank_account_name\")\n                                }}</label>\n                                <div class=\"col-md-9\">\n                                    <input class=\"form-control\" name=\"bank_account_name\" type=\"text\"\n                                        v-model=\"bank_account_name\" />\n                                    <span v-show=\"errors.has('bank_account_name')\" class=\"help text-danger\">{{\n                                    errors.first(\"bank_account_name\")\n                                    }}</span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group row mt-3\">\n                                <label class=\"col-md-3 form-label\">{{\n                                trans(\"em.bank_account_phone\")\n                                }}</label>\n                                <div class=\"col-md-9\">\n                                    <input class=\"form-control\" name=\"bank_account_phone\" type=\"text\"\n                                        v-model=\"bank_account_phone\" />\n                                    <span v-show=\"\n                                        errors.has('bank_account_phone')\n                                    \" class=\"help text-danger\">{{\n                                    errors.first(\"bank_account_phone\")\n                                    }}</span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group row mt-3\">\n                                <div class=\"col-md-9 offset-md-3\">\n                                    <button class=\"btn btn-primary\" type=\"submit\">\n                                        <i class=\"fas fa-sd-card\"></i>\n                                        {{ trans(\"em.save\") }}\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport mixinsFilters from \"../../mixins.js\";\nexport default {\n    props: [\"user\", \"csrf_token\"],\n    mixins: [mixinsFilters],\n\n    data() {\n        return {\n            bank_name: null,\n            bank_code: null,\n            bank_branch_name: null,\n            bank_branch_code: null,\n            bank_account_number: null,\n            bank_account_name: null,\n            bank_account_phone: null\n        };\n    },\n    methods: {\n\n        editProfile() {\n            (this.bank_name = this.user.bank_name),\n                (this.bank_code = this.user.bank_code),\n                (this.bank_branch_name = this.user.bank_branch_name),\n                (this.bank_branch_code = this.user.bank_branch_code),\n                (this.bank_account_number = this.user.bank_account_number),\n                (this.bank_account_name = this.user.bank_account_name),\n                (this.bank_account_phone = this.user.bank_account_phone);\n        },\n\n        // validate data on form submit\n        validateForm(event) {\n            this.$validator.validateAll().then(result => {\n                if (result) {\n                    this.formSubmit(event);\n                }\n            });\n        },\n\n        // show server validation errors\n        serverValidate(serrors) {\n            this.$validator.validateAll().then(result => {\n                this.$validator.errors.add(serrors);\n            });\n        },\n\n        // submit form\n        async formSubmit(event) {\n            this.$refs.form.submit();\n        },\n\n        submitUrl() {\n            return route(\"eventmie.updateBankUser\");\n        },\n    },\n    mounted() {\n        this.editProfile();\n    }\n};\n</script>\n","<template>\n    <div>\n        <div id=\"organiser\" class=\"tab-pane\">\n            <div class=\"panel-group\">\n                <div class=\"panel panel-default lgx-panel\">\n                    <div class=\"panel-heading px-5\">\n                        \n                        <div class=\"alert alert-info\" role=\"alert\" v-if=\"is_organiser == false && user.organisation != null && user.organisation != undefined && manually_approve_organizer\">\n                            <strong> {{ trans('em.become_organiser_notification') }} </strong> \n                        </div>\n\n                        <div class=\"card border-0 shadow-sm bg-light my-3\">\n                            <div class=\"card-body p-4 fs-5\">\n                                <div class=\"d-flex justify-content-between align-items-center mb-3\">\n                                    <h4 class=\"card-title mb-0 text-primary\">{{ trans('em.how_it_works') }}</h4>\n                                </div>\n                                <div class=\"d-flex\">\n                                    <div>\n                                        <span><i class=\"fas fa-arrow-right text-primary\"></i></span>\n                                    </div>\n                                    <div class=\"ms-3 lh-1\">\n                                        <h5 class=\"mb-1\">{{ trans('em.organiser_note_1') }}</h5>\n                                    </div>\n                                </div>\n                                <div class=\"d-flex\">\n                                    <div>\n                                        <span><i class=\"fas fa-arrow-right text-primary\"></i></span>\n                                    </div>\n                                    <div class=\"ms-3 lh-1\">\n                                        <h5 class=\"mb-1\">{{ trans('em.organiser_note_2') }}</h5>\n                                    </div>\n                                </div>\n                                <div class=\"d-flex\">\n                                    <div>\n                                        <span><i class=\"fas fa-arrow-right text-primary\"></i></span>\n                                    </div>\n                                    <div class=\"ms-3 lh-1\">\n                                        <h5 class=\"mb-1\">{{ trans('em.organiser_note_3') }}</h5>\n                                    </div>\n                                </div>\n                                <div class=\"d-flex\">\n                                    <div>\n                                        <span><i class=\"fas fa-arrow-right text-primary\"></i></span>\n                                    </div>\n                                    <div class=\"ms-3 lh-1\">\n                                        <h5 class=\"mb-1\">{{ trans('em.organiser_note_4') }}</h5>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <form class=\"form-horizontal\" ref=\"form\" :action=\"submitUrl()\" @submit.prevent=\"validateForm\"\n                            method=\"POST\" enctype=\"multipart/form-data\">\n                            <input type=\"hidden\" name=\"_token\" id=\"csrf-token\" :value=\"csrf_token\" />\n\n                            <div class=\"form-group row\">\n                                <label class=\"col-md-3 form-label\">{{ trans(\"em.organization\") }}\n                                    {{ trans(\"em.name\") }}*</label>\n                                <div class=\"col-md-9\">\n                                    <input class=\"form-control\" name=\"organisation\" type=\"text\" v-validate=\"'required'\"\n                                        v-model=\"organisation\" />\n                                    <span v-show=\"errors.has('organisation')\" class=\"help text-danger\">{{\n                                    errors.first(\"organisation\")\n                                    }}</span>\n                                </div>\n                            </div>\n\n\n                            <div class=\"form-group row mt-3\">\n                                <div class=\"col-md-9 offset-md-3\">\n                                    <button class=\"btn btn-primary\" type=\"submit\">\n                                        <i class=\"fas fa-sd-card\"></i>\n                                        {{ trans(\"em.save\") }}\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport mixinsFilters from \"../../mixins.js\";\nexport default {\n    props: [\"user\", \"csrf_token\"],\n\n    mixins: [mixinsFilters],\n    data() {\n        return {\n            organisation: null,\n            org_description: null,\n            org_facebook: null,\n            org_instagram: null,\n            org_youtube: null,\n            org_twitter: null,\n            manually_approve_organizer: manually_approve_organizer,\n            is_organiser : is_organiser,\n        };\n    },\n    computed: {\n        // get global variables\n    },\n    methods: {\n        editProfile() {\n            \n            (this.organisation = this.user.organisation),\n                (this.org_description = this.user.org_description),\n                (this.org_facebook = this.user.org_facebook),\n                (this.org_instagram = this.user.org_instagram),\n                (this.org_youtube = this.user.org_youtube),\n                (this.org_twitter = this.user.org_twitter);\n        },\n\n        // validate data on form submit\n        validateForm(event) {\n            this.$validator.validateAll().then(result => {\n                if (result) {\n                    this.formSubmit(event);\n                }\n            });\n        },\n\n        // show server validation errors\n        serverValidate(serrors) {\n            this.$validator.validateAll().then(result => {\n                this.$validator.errors.add(serrors);\n            });\n        },\n\n        // submit form\n        async formSubmit(event) {\n            this.$refs.form.submit();\n        },\n\n        submitUrl() {\n            return route(\"eventmie.updateOrganiserUser\");\n        },\n    },\n    mounted() {\n        this.editProfile();\n    }\n};\n</script>\n","<template>\n    <div>\n        <div id=\"BecomeOrganiser\" class=\"tab-pane\">\n            <div class=\"panel-group\">\n                <div class=\"panel panel-default\">\n                    <div v-if=\"user.organisation\">\n                        <div class=\"alert alert-info\" role=\"alert\">\n                            <strong>{{ trans(\"em.become_organiser_notification\") }}</strong>\n                        </div>\n                    </div>\n\n                    <h3 class=\"mb-0\">{{ trans('em.become_organiser') }}</h3>\n                    <p class=\"mb-0\">{{ trans('em.become_organizer_to_host') }}</p>\n\n                    <div class=\"card border-0 shadow-sm bg-light my-3\">\n                        <div class=\"card-body p-4 fs-5\">\n                            <div class=\"d-flex justify-content-between align-items-center mb-3\">\n                                <h4 class=\"card-title mb-0 text-primary\">{{ trans('em.how_it_works') }}</h4>\n                            </div>\n                            <div class=\"d-flex\">\n                                <div>\n                                    <span><i class=\"fas fa-arrow-right text-primary\"></i></span>\n                                </div>\n                                <div class=\"ms-3 lh-1\">\n                                    <h5 class=\"mb-1\">{{ trans('em.organiser_note_1') }}</h5>\n                                </div>\n                            </div>\n                            <div class=\"d-flex\">\n                                <div>\n                                    <span><i class=\"fas fa-arrow-right text-primary\"></i></span>\n                                </div>\n                                <div class=\"ms-3 lh-1\">\n                                    <h5 class=\"mb-1\">{{ trans('em.organiser_note_2') }}</h5>\n                                </div>\n                            </div>\n                            <div class=\"d-flex\">\n                                <div>\n                                    <span><i class=\"fas fa-arrow-right text-primary\"></i></span>\n                                </div>\n                                <div class=\"ms-3 lh-1\">\n                                    <h5 class=\"mb-1\">{{ trans('em.organiser_note_3') }}</h5>\n                                </div>\n                            </div>\n                            <div class=\"d-flex\">\n                                <div>\n                                    <span><i class=\"fas fa-arrow-right text-primary\"></i></span>\n                                </div>\n                                <div class=\"ms-3 lh-1\">\n                                    <h5 class=\"mb-1\">{{ trans('em.organiser_note_4') }}</h5>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n    \n                    <form class=\"form-horizontal\" ref=\"form\" :action=\"submitUrl()\" @submit.prevent=\"validateForm\" method=\"POST\" enctype=\"multipart/form-data\">\n                        <input type=\"hidden\" name=\"_token\" id=\"csrf-token\" :value=\"csrf_token\" />\n                        <input type=\"hidden\" name=\"role_id\" value=\"3\">\n\n                        <div class=\"form-group row mt-3\">\n                            <label class=\"col-md-3 form-label\">{{ trans(\"em.organization\") }}</label>\n                            <div class=\"col-md-9\">\n                                <input class=\"form-control\" name=\"organisation\" v-model=\"organisation\" type=\"text\" :placeholder=\"trans('em.brand_identity')\" required>\n                                <span v-show=\"errors.has('organisation')\" class=\"help text-danger\">{{ errors.first(\"organisation\") }}</span>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row mt-3\">\n                            <div class=\"col-md-9 offset-md-3\">\n                                <button class=\"btn btn-primary\" type=\"submit\">\n                                    <i class=\"fas fa-sd-card\"></i>\n                                    {{ trans(\"em.submit\") }}\n                                </button>\n                            </div>\n                        </div>\n\n                    </form>\n                    \n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport mixinsFilters from \"../../mixins.js\";\nexport default {\n    props: [\"user\", \"csrf_token\"],\n    mixins: [mixinsFilters],\n\n    data() {\n        return {\n            organisation: user.organisation,\n        };\n    },\n    methods: {\n        // validate data on form submit\n        validateForm(event) {\n            this.$validator.validateAll().then(result => {\n                if (result) {\n                    this.formSubmit(event);\n                }\n            });\n        },\n\n        // show server validation errors\n        serverValidate(serrors) {\n            this.$validator.validateAll().then(result => {\n                this.$validator.errors.add(serrors);\n            });\n        },\n\n        // submit form\n        async formSubmit(event) {\n            this.$refs.form.submit();\n        },\n\n        submitUrl() {\n            return route(\"eventmie.updateAuthUserRole\");\n        },\n    },\n    mounted() {}\n};\n</script>\n","\n/**\n * This is a page specific seperate vue instance initializer\n */\n\n// include vue common libraries, plugins and components\nimport \"../vue_common.js\";\n\n/**\n * Local Third-party Lib Imports\n*/\n/* Instances */\nimport Vuex from 'vuex';\nwindow.Vuex = Vuex;\nVue.use(Vuex);\n\n\nimport PersonalDetails from './components/PersonalDetails.vue';\n\nimport Security from './components/Security.vue';\nimport BankDetails from './components/BankDetails.vue';\nimport OrganiserInfo from './components/OrganiserInfo.vue';\n\nimport BecomeOrganiser from './components/BecomeOrganiser.vue';\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Croppa from 'vue-croppa';\nVue.use(Croppa)\n\n/**\n * Local Vuex Store \n */\n\nconst store = new Vuex.Store({\n\n    state: {\n        personal_details    : [],\n        update_bank_details : [],\n        organiser_info      : [],\n    },\n\n    mutations: {\n        add(state, { personal_details, update_bank_details, organiser_info }) {\n\n            if (typeof personal_details !== \"undefined\") {\n                state.personal_details = personal_details;\n            }\n\n            if (typeof update_bank_details !== \"undefined\") {\n                state.update_bank_details = update_bank_details;\n            }\n\n            if (typeof organiser_info !== \"undefined\") {\n                state.organiser_info = organiser_info;\n            }\n        }\n    }\n\n});\n\n\n\nconst routes = new VueRouter({\n    linkExactActiveClass: 'active',\n    routes: [\n        {\n            path: '/',\n            name: 'personal-details',\n            props: {\n                user: user,\n                csrf_token: csrf_token,\n            },\n            component: PersonalDetails,\n        },\n        {\n            path: '/userSecurity',\n            name: 'security',\n            props: {\n                user: user,\n                csrf_token: csrf_token,\n            },\n            component: Security,\n        },\n        {\n            path: '/userBankDetails',\n            name: 'bank-details',\n            props: {\n                user: user,\n                csrf_token: csrf_token,\n            },\n            component: BankDetails,\n        },\n        {\n            path: '/userOrganiserInfo',\n            name: 'organiser-info',\n            props: {\n                user: user,\n                csrf_token: csrf_token,\n            },\n            component: OrganiserInfo,\n        },\n        {\n            path: '/becomeOrganiser',\n            props: {\n                user: user,\n                multi_vendor: multi_vendor,\n                csrf_token: csrf_token,\n            },\n            name: 'become-organiser',\n            component: BecomeOrganiser,\n        },\n\n    ],\n\n});\n\n/**\n * This is where we finally create a page specific\n * vue instance with required configs\n * element=app will remain common for all vue instances\n *\n * make sure to use window.app to make new Vue instance\n * so that we can access vue instance from anywhere\n * e.g interceptors \n */\nwindow.app = new Vue({\n    el: '#eventmie_app',\n    router: routes,\n    store: store,\n    data() {\n        return {\n            store: store\n        }\n    },\n    computed: {\n\n        currentRouteName() {\n            return this.$route.name;\n        },\n        ...mapState([\"personal_details\",  \"update_bank_details\", \"organiser_info\"])\n\n    },\n    methods: {\n        ...mapMutations([\"add\"]),\n\n        checkEmptyProfile() {\n            if (\n                user.name == \"\" ||\n                // user.username == null ||\n                user.email == \"\"\n            ) {\n                return false;\n            }\n            return true;\n        },\n\n        checkEmptyBank() {\n            return true;\n        },\n\n        checkEmptyOrganisation() {\n            if (\n                user.organisation == null \n            ) {\n                return false;\n            }\n            return true;\n        }\n\n\n\n    },\n    mounted() {\n        this.add({\n            personal_details: this.checkEmptyProfile(),\n            update_bank_details: this.checkEmptyBank(),\n            organiser_info: this.checkEmptyOrganisation(),\n            \n        });\n    }\n\n\n});"],"names":["_sfc_main","Vuex"],"mappings":"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"}